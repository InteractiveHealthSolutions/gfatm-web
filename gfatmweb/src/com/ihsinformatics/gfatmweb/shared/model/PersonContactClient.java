/*
Copyright(C) 2016 Interactive Health Solutions, Pvt. Ltd.
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 3 of the License (GPLv3), or any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Interactive Health Solutions, info@ihsinformatics.com
You can also access the license on the internet at the address: http://www.gnu.org/licenses/gpl-3.0.html

Interactive Health Solutions, hereby disclaims all copyright interest in this program written by the contributors.
 */

/**
 * @author owais.hussain@ihsinformatics.com
 */

package com.ihsinformatics.gfatmweb.shared.model;

// Generated Dec 9, 2015 9:08:22 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * PersonContact generated by hbm2java
 */
@Entity
@Table(name = "person_contact", uniqueConstraints = @UniqueConstraint(columnNames = "uuid"))
public class PersonContactClient implements java.io.Serializable {

	/**
     * 
     */
	private static final long serialVersionUID = -3494640521450104048L;
	private Integer contactId;
	private UsersClient usersByCreatedBy;
	private LocationClient locationByCreatedAt;
	private LocationClient locationByChangedAt;
	private UsersClient usersByChangedBy;
	private PersonClient person;
	private String address1;
	private String address2;
	private String address3;
	private String cityVillage;
	private String stateProvince;
	private String country;
	private String landmark1;
	private String landmark2;
	private String latitude;
	private String longitude;
	private String primaryContact;
	private String secondaryContact;
	private String email;
	private String fax;
	private Boolean preferred;
	private Date dateCreated;
	private Date dateChanged;
	private String uuid;

	public PersonContactClient() {
	}

	public PersonContactClient(PersonClient person, String address1,
			String cityVillage, String country, String primaryContact,
			Boolean preferred) {
		this.person = person;
		this.address1 = address1;
		this.cityVillage = cityVillage;
		this.country = country;
		this.primaryContact = primaryContact;
		this.preferred = preferred;
	}

	public PersonContactClient(PersonClient person, String address1,
			String cityVillage, String country, String primaryContact,
			Boolean preferred, UsersClient createdBy, LocationClient createdAt,
			Date dateCreated, String uuid) {
		this.person = person;
		this.address1 = address1;
		this.cityVillage = cityVillage;
		this.country = country;
		this.primaryContact = primaryContact;
		this.preferred = preferred;
		this.usersByCreatedBy = createdBy;
		this.dateCreated = dateCreated;
		this.uuid = uuid;
	}

	public PersonContactClient(PersonClient person, String address1,
			String address2, String address3, String cityVillage,
			String stateProvince, String country, String landmark1,
			String latitude, String longitude, String primaryContact,
			Boolean preferred, UsersClient createdBy, LocationClient createdAt,
			Date dateCreated, String uuid) {
		this.usersByCreatedBy = createdBy;
		this.locationByCreatedAt = createdAt;
		this.person = person;
		this.address1 = address1;
		this.address2 = address2;
		this.address3 = address3;
		this.cityVillage = cityVillage;
		this.stateProvince = stateProvince;
		this.country = country;
		this.landmark1 = landmark1;
		this.latitude = latitude;
		this.longitude = longitude;
		this.primaryContact = primaryContact;
		this.preferred = preferred;
		this.dateCreated = dateCreated;
		this.uuid = uuid;
	}

	public PersonContactClient(UsersClient usersByCreatedBy,
			LocationClient locationByCreatedAt,
			LocationClient locationByChangedAt, UsersClient usersByChangedBy,
			PersonClient person, String address1, String address2,
			String address3, String cityVillage, String stateProvince,
			String country, String landmark1, String landmark2,
			String latitude, String longitude, String primaryContact,
			String secondaryContact, String email, String fax,
			Boolean preferred, Date dateCreated, Date dateChanged, String uuid) {
		this.usersByCreatedBy = usersByCreatedBy;
		this.locationByCreatedAt = locationByCreatedAt;
		this.locationByChangedAt = locationByChangedAt;
		this.usersByChangedBy = usersByChangedBy;
		this.person = person;
		this.address1 = address1;
		this.address2 = address2;
		this.address3 = address3;
		this.cityVillage = cityVillage;
		this.stateProvince = stateProvince;
		this.country = country;
		this.landmark1 = landmark1;
		this.landmark2 = landmark2;
		this.latitude = latitude;
		this.longitude = longitude;
		this.primaryContact = primaryContact;
		this.secondaryContact = secondaryContact;
		this.email = email;
		this.fax = fax;
		this.preferred = preferred;
		this.dateCreated = dateCreated;
		this.dateChanged = dateChanged;
		this.uuid = uuid;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "contact_id", unique = true, nullable = false)
	public Integer getContactId() {
		return this.contactId;
	}

	public void setContactId(Integer contactId) {
		this.contactId = contactId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by")
	public UsersClient getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(UsersClient usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_at")
	public LocationClient getLocationByCreatedAt() {
		return this.locationByCreatedAt;
	}

	public void setLocationByCreatedAt(LocationClient locationByCreatedAt) {
		this.locationByCreatedAt = locationByCreatedAt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "changed_at")
	public LocationClient getLocationByChangedAt() {
		return this.locationByChangedAt;
	}

	public void setLocationByChangedAt(LocationClient locationByChangedAt) {
		this.locationByChangedAt = locationByChangedAt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "changed_by")
	public UsersClient getUsersByChangedBy() {
		return this.usersByChangedBy;
	}

	public void setUsersByChangedBy(UsersClient usersByChangedBy) {
		this.usersByChangedBy = usersByChangedBy;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "person_id")
	public PersonClient getPerson() {
		return this.person;
	}

	public void setPerson(PersonClient person) {
		this.person = person;
	}

	@Column(name = "address1", length = 45)
	public String getAddress1() {
		return this.address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}

	@Column(name = "address2", length = 45)
	public String getAddress2() {
		return this.address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}

	@Column(name = "address3", length = 45)
	public String getAddress3() {
		return this.address3;
	}

	public void setAddress3(String address3) {
		this.address3 = address3;
	}

	@Column(name = "city_village", length = 45)
	public String getCityVillage() {
		return this.cityVillage;
	}

	public void setCityVillage(String cityVillage) {
		this.cityVillage = cityVillage;
	}

	@Column(name = "state_province", length = 45)
	public String getStateProvince() {
		return this.stateProvince;
	}

	public void setStateProvince(String stateProvince) {
		this.stateProvince = stateProvince;
	}

	@Column(name = "country", length = 45)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "landmark1", length = 45)
	public String getLandmark1() {
		return this.landmark1;
	}

	public void setLandmark1(String landmark1) {
		this.landmark1 = landmark1;
	}

	@Column(name = "landmark2", length = 45)
	public String getLandmark2() {
		return this.landmark2;
	}

	public void setLandmark2(String landmark2) {
		this.landmark2 = landmark2;
	}

	@Column(name = "latitude", length = 45)
	public String getLatitude() {
		return this.latitude;
	}

	public void setLatitude(String latitude) {
		this.latitude = latitude;
	}

	@Column(name = "longitude", length = 45)
	public String getLongitude() {
		return this.longitude;
	}

	public void setLongitude(String longitude) {
		this.longitude = longitude;
	}

	@Column(name = "primary_contact", length = 20)
	public String getPrimaryContact() {
		return this.primaryContact;
	}

	public void setPrimaryContact(String primaryContact) {
		this.primaryContact = primaryContact;
	}

	@Column(name = "secondary_contact", length = 20)
	public String getSecondaryContact() {
		return this.secondaryContact;
	}

	public void setSecondaryContact(String secondaryContact) {
		this.secondaryContact = secondaryContact;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "fax", length = 20)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "preferred")
	public Boolean getPreferred() {
		return this.preferred;
	}

	public void setPreferred(Boolean preferred) {
		this.preferred = preferred;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_created", nullable = false, length = 19)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_changed", length = 19)
	public Date getDateChanged() {
		return this.dateChanged;
	}

	public void setDateChanged(Date dateChanged) {
		this.dateChanged = dateChanged;
	}

	@Column(name = "uuid", unique = true, nullable = false, length = 38)
	public String getUuid() {
		return this.uuid;
	}

	public void setUuid(String uuid) {
		this.uuid = uuid;
	}

	@Override
	public String toString() {
		return person.getPersonId() + ", " + contactId + ", " + address1 + ", "
				+ address2 + ", " + address3 + ", " + cityVillage + ", "
				+ stateProvince + ", " + country + ", " + landmark1 + ", "
				+ landmark2 + ", " + latitude + ", " + longitude + ", "
				+ primaryContact + ", " + secondaryContact + ", " + email
				+ ", " + fax + ", " + preferred + ", " + dateCreated + ", "
				+ dateChanged + ", " + uuid;
	}
}
