/*
Copyright(C) 2016 Interactive Health Solutions, Pvt. Ltd.
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 3 of the License (GPLv3), or any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Interactive Health Solutions, info@ihsinformatics.com
You can also access the license on the internet at the address: http://www.gnu.org/licenses/gpl-3.0.html

Interactive Health Solutions, hereby disclaims all copyright interest in this program written by the contributors.
 */


/**
 * @author owais.hussain@ihsinformatics.com
 */


package com.ihsinformatics.gfatmweb.shared.model;

// Generated Dec 9, 2015 9:08:22 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * RolePrivilege generated by hbm2java
 */
@Entity
@Table(name = "role_privilege", uniqueConstraints = @UniqueConstraint(columnNames = "uuid"))
public class RolePrivilegeClient implements java.io.Serializable {

	/**
     * 
     */
	private static final long serialVersionUID = -2641857434184485168L;
	private RolePrivilegeIdclinet id;
	private UsersClient users;
	private PrivilegeClient privilege;
	private RoleClient role;
	private LocationClient location;
	private Date dateCreated;
	private String uuid;

	public RolePrivilegeClient() {
	}

	public RolePrivilegeClient(RolePrivilegeIdclinet id,
			PrivilegeClient privilege, RoleClient role) {
		this.id = id;
		this.privilege = privilege;
		this.role = role;
	}

	public RolePrivilegeClient(RolePrivilegeIdclinet id,
			PrivilegeClient privilege, UsersClient createdBy, RoleClient role,
			Date dateCreated, String uuid) {
		this.id = id;
		this.privilege = privilege;
		this.users = createdBy;
		this.role = role;
		this.dateCreated = dateCreated;
		this.uuid = uuid;
	}

	public RolePrivilegeClient(RolePrivilegeIdclinet id, UsersClient createdBy,
			PrivilegeClient privilege, RoleClient role,
			LocationClient location, Date dateCreated, String uuid) {
		this.id = id;
		this.users = createdBy;
		this.privilege = privilege;
		this.role = role;
		this.location = location;
		this.dateCreated = dateCreated;
		this.uuid = uuid;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "roleId", column = @Column(name = "role_id", nullable = false)),
			@AttributeOverride(name = "privilege", column = @Column(name = "privilege", nullable = false, length = 45)) })
	public RolePrivilegeIdclinet getId() {
		return this.id;
	}

	public void setId(RolePrivilegeIdclinet id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by")
	public UsersClient getUsers() {
		return this.users;
	}

	public void setUsers(UsersClient users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "privilege", nullable = false, insertable = false, updatable = false)
	public PrivilegeClient getPrivilege() {
		return this.privilege;
	}

	public void setPrivilege(PrivilegeClient privilege) {
		this.privilege = privilege;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "role_id", nullable = false, insertable = false, updatable = false)
	public RoleClient getRole() {
		return this.role;
	}

	public void setRole(RoleClient role) {
		this.role = role;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_at")
	public LocationClient getLocation() {
		return this.location;
	}

	public void setLocation(LocationClient location) {
		this.location = location;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_created", nullable = false, length = 19)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "uuid", unique = true, nullable = false, length = 38)
	public String getUuid() {
		return this.uuid;
	}

	public void setUuid(String uuid) {
		this.uuid = uuid;
	}

	@Override
	public String toString() {
		return id + ", " + dateCreated + ", " + uuid;
	}
}
