<htmlform>
	<!-- Autogenerated example form  (template from 01-Nov-2010 -->
	<macros>
		paperFormId = (Fill this in)
		headerColor =#009d8e
		fontOnHeaderColor = white
	</macros>

	<style>
		.section {
			border: 1px solid $headerColor;
			padding: 2px;
			text-align: left;
			margin-bottom: 1em;
		}
		.sectionHeader {
			background-color: $headerColor;
			color: $fontOnHeaderColor;
			display: block;
			padding: 2px;
			font-weight: bold;
		}
		table.baseline-aligned td {
			vertical-align: baseline;
		}
	</style>

	<span style="float:right">Paper Form ID: $paperFormId</span>
	<h2>Childhood Tb-AFB Smear Test Result (v0.1.0)</h2>

	<section headerLabel="1. Encounter Details">
		<table class="baseline-aligned">
			<tr>
				<td>Date:</td>
				<td><encounterDate default="today" id="encounter_date"/></td>
			</tr>
			<tr>
				<td>Location:</td>
				<td><encounterLocation default="2"  tags="PET" /></td>
			</tr>
			<tr>
				<td>Provider:</td>
				<td><encounterProvider default="currentUser" type="autocomplete"/></td>
			</tr>
		</table>
	</section>

	<section headerLabel="2. AFB Smear Results">
<div>

		    <p> Smear Result
				<br/>
				<obs conceptId="307" answerConceptIds="664, 165363, 1362, 1363, 1364" id="smear_result"   answerLabels="Negative, Scanty 3-24, 1+, 2+, 3+" required="true" defaultValue="664">
			         <controls>
	                               <when value="165363" thenDisplay="#smear_number_afb_div"/>
					 </controls>
				</obs>
			</p>
			<div id="smear_number_afb_div">
				<p>Number of AFB seen in one field*
				<br/>
				<obs conceptId="165365" id="smear_number_afb"  />
			</p>

</div>
			<p>
				Order ID 
				<br/>
				<select id="orderids"></select>
				<obs id="order_id" conceptId="165715" required="false" size="15" />
			</p>

             <p>
				Test ID
				<br/>
				<obs conceptId="164350" id="test_id" maxlength="20" />
			</p>
</div>

	</section>

	<submit/>

<script type = "text/javascript">


	
	var startDate = new Date();
	jQuery(function() {
		getField("order_id.value").prop('disabled',true);
		
		var orders = document.getElementById("orderids");
			orders.onchange = function(){
                var e = document.getElementById("orderids");
				var orderID = e.options[e.selectedIndex].text;
                
				setValue('order_id.value',orderID);						
		}
	});
   
	var encounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('05395d2b-83e2-4432-a8f9-18f0527955c6'))  $fn.getObs($encounter, '165715').getValueAsString($!{locale}) #end"/>";
	var result = encounters.replace(/\s\s+/g, '@');
    var resultValueArray = result.split('@');
	var check=true;
	var orders = document.getElementById('orderids');
	orders.remove(0);
	if(resultValueArray.length==1){
		check=false;
	}else{
		for (i = 0; i &lt; resultValueArray.length; i++) {
			if(resultValueArray[i].length &gt; 0){
				orders.options[i]= new Option(resultValueArray[i]);
			}
		}
	}

	beforeSubmit.push(function() {
		var error=true;
		setValue('smear_number_afb.error', '');
			
		if(getValue('smear_result.value')==165363 &amp;&amp; getValue('smear_number_afb.value')==''){
					getField('smear_number_afb.error').html('This field can not be null').show();
					error=false;
	     }
		else if(getValue('smear_number_afb.value') &lt; 0  || getValue('smear_number_afb.value') &gt; 9999){                    	
               getField('smear_number_afb.error').html('Value out of range. It should be 4 digit number').show();
				error=false;
		}
		else{     
			getField('smear_number_afb.error').html('').hide();
		}
		
		if(getValue('order_id.value')==''){                    	
            getField('order_id.error').html('Order ID can not be null').show();
			error=false;
		}
		else{     
			getField('order_id.error').html('').hide();
		}
			<ifMode mode="ENTER">	
			var OrderIdEncounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('1139a871-5f4d-48c4-b957-e71f3a84c55a'))  $fn.getObs($encounter, '165715').getValueAsString($!{locale}) #end"/>";
            var OrderIdResult = OrderIdEncounters.replace(/\s\s+/g, '@');
            var OrderIdResultValueArray = OrderIdResult.split('@');
			if(getValue('order_id.value')!=''){
			 for(var j = OrderIdResultValueArray.length-1; 0 &lt;= j; j--){
                if((OrderIdResultValueArray[j]).trim() == (getValue('order_id.value')).trim()){                //if both ids match use 'j' index to retrieve last food intake value                      
                    getField('order_id.error').html('Result for this Order ID already submitted.').show();
					error = false;
                    break;
                }
                else {
                     getField('order_id.error').html('').hide();
                }
			 }
			}
			
			
				//Code for Checking if Test ID already exists.
				myRegExp = new RegExp(/^[a-zA-Z0-9-,.'"()#&amp;:;,'"+%$*=!| \\/]{1,20}$/);
				
				var encounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('1139a871-5f4d-48c4-b957-e71f3a84c55a'))  $fn.getObs($encounter, '164350').getValueAsString($!{locale}) #end"/>";
		  
				var result = encounters.replace(/\s\s+/g, '@');
				var resultValueArray = result.split('@');


				if(!myRegExp.test(getValue('test_id.value'))) {
					 
					getField('test_id.error').html('Not a valid ID.').show();
					error=false;
				}
				else if(getValue('test_id.value').length > 0 &amp;&amp; getValue('test_id.value').trim() ==''){
					  getField('test_id.error').html('Invalid Test ID.').show();
					  error=false;
				}
				else{
					getField('test_id.error').html('').hide();

					for(var j = resultValueArray.length-1; 0 &lt;= j; j--){
					if((resultValueArray[j]).trim() == (getValue('test_id.value')).trim()){                //if both ids match use 'j' index to retrieve last food intake value                      
					error =false;
								
						getField('test_id.error').html('Test ID already exists.').show();
								break;
							}
					else {
						 getField('test_id.error').html('').hide();
					}       

					}					
				}
			
			</ifMode>
		
		
        if(check==false){
            alert('Can not be Submit. No test order form found');
            error=false;
        }
		if(error==false){
            return false;
        }
        else{
            getField("order_id.value").prop('disabled',false);
			var endDate = new Date();
			var timeDiff = Math.abs(endDate.getTime() - startDate.getTime());
			var diffSec = timeDiff/1000;
			alert(diffSec + " seconds to fill form");
            return true;
        }
});

</script>

<!-- END OF FORM

Simple examples to copy-and-paste. Full reference at http://wiki.openmrs.org/x/kg8z

SECTION
	<section headerLabel="\#. Title">
		Content
	</section>

NUMERIC OBSERVATION
	<obs conceptId="id-of-numeric-concept" labelText="Label before"/>

DATE OBSERVATION
	<obs conceptId="id-of-date-concept" labelText="Label before"/>

CODED OBSERVATION
(as a dropdown)
	<obs conceptId="id-of-coded-concept" labelText="Label before"/>
(as radio buttons)
	<obs conceptId="id-of-coded-concept" labelText="Label before" style="radio"/>
(as an autocomplete)
	<obs conceptId="id-of-coded-concept" labelText="Label before" style="autocomplete" answerClasses="Diagnosis"/>
(as a checkbox for a specific answer)
	<obs conceptId="id-of-coded-concept" labelText="Label before" answerConceptId="id-of-answer-concept" answerLabel="label for answer"/>
(as a dropdown with specific choices)
	<obs conceptId="id-of-coded-concept" labelText="Label before" answerConceptIds="concept-id-1,concept-id-2,concept-id-3" answerLabels="Label 1,Label 2, Label 3"/>


FREE TEXT OBSERVATION
(as a normal text field)
	<obs conceptId="id-of-text-concept" labelText="Label before"/>
(as a textarea)
	<obs conceptId="id-of-text-concept" labelText="Label before" rows="4" cols="80"/>
-->
</htmlform>