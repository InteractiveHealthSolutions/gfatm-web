<htmlform>
	<!-- Autogenerated example form  (template from 01-Nov-2010 -->
	<macros>
		paperFormId = (Fill this in)
		headerColor =#009d8e
		fontOnHeaderColor = white
	</macros>

	<style>
		.section {
			border: 1px solid $headerColor;
			padding: 2px;
			text-align: left;
			margin-bottom: 1em;
		}
		.sectionHeader {
			background-color: $headerColor;
			color: $fontOnHeaderColor;
			display: block;
			padding: 2px;
			font-weight: bold;
		}
		table.baseline-aligned td {
			vertical-align: baseline;
		}
	</style>

	<span style="float:right">Paper Form ID: $paperFormId</span>
	<h2>CXR Test Result (v1.0.0)</h2>

	<section headerLabel="1. Encounter Details">
		<table class="baseline-aligned">
			<tr>
				<td>Date:</td>
				<td><encounterDate default="today"  id="encounter_date"/></td>
			</tr>
			<tr>
				<td>Location:</td>
				<td><encounterLocation default="2" /></td>
			</tr>
			<tr>
				<td>Provider:</td>
				<td><encounterProvider default="currentUser" type="autocomplete"/></td>
			</tr>
		</table>
	</section>

	<section headerLabel="2. CXR Result">
		<div>
			<p>
				Order ID
				<br/>
					<select id="order_id_list">			   
					
					</select>
				<br/>
					<obs id="order_id" conceptId="165715" required="false" />
			</p>

			<div id = "cad4tb_score_div">
				<p>
					Chest X-Ray (CAD4TB) Score
					<br/>
					<obs conceptId="164373" id="cad4tb_score" />
				</p>
			</div>

			<div id= "cad_score_range_div">
				<p>
					CAD Score Range				
					<br/>
					<obs conceptId="165802" id="cad_score_range"  answerConceptIds="165800,165801" answerLabels="1-69 (Normal), 70-100 (Abnormal)"/>
				</p>
			</div>
			
			
			<div id= "cad4tb_div">
				<div id="radiological_diagnosis_div">
					<p>
					Radiological Diagnosis
					<br/>
					<obs conceptId="165709" id="radiological_diagnosis" answerConceptIds="1115,165706,165707" answerLabels="Normal,Abnormal Suggestive of TB,Abnormal Not Suggestive of TB">
						<controls>
							<when value="165706" thenDisplay="#abnormal_detail_div"/>
						</controls>
					</obs>
					</p>
				</div>
			
			
				<div id="abnormal_detail_div">
					<p> 
						If Abnormal, Detailed Diagnosis
						<br/>
						<obsgroup groupingConceptId="12" id="close_contact_type">
						<obs conceptId="12" answerConceptId="164112" style="checkbox" id="close_contact_first" answeLabel="Adenopathy"/>
						<br/>
						<obs conceptId="12" answerConceptId="6049" style="checkbox" answeLabel="Infiltration"/>
						<br/>
						<obs conceptId="12" answerConceptId="164845" style="checkbox" answeLabel="Consolidation"/>					
						<br/>
						<obs conceptId="12" answerConceptId="114108" style="checkbox" answeLabel="Effusion"/>
						<br/>
						<obs conceptId="12" answerConceptId="165688" style="checkbox" answeLabel="Cavitation"/>
						<br/>
						<obs conceptId="12" answerConceptId="165465" style="checkbox" answeLabel="Miliary TB"/>
						<br/>
						<obs conceptId="12" answerConceptId="164748" style="checkbox" answeLabel="Others"/>					
						</obsgroup>
					</p>
				</div>
			
				<div id="scnngcxr_diagnosis_other_div">
					<p>
						If others then specify*
						<br/>
						<obs conceptId="164748" id="scnngcxr_diagnosis_other" maxlength="50" />
					</p>
				</div>
				
				
				
			</div>
                                <p>
					Extent of disease
					<br/>
					<obs conceptId="164355" answerConceptIds="1115, 164850, 160406, 1116" answerLabels="Normal, Unilateral disease, Bilateral disease, Abnormal but extent not defined" id="disease_extent" />      
				</p>
			<p>
				Radiologist's Remarks
				<br/>
				<obs conceptId="164237" id="radiologist_remarks" />
			</p>

			<div id="presumptive_tb_cxr_div">
				<p> 
					Presumptive TB through CXR
					<br/>
					<obs conceptId="165835" id="presumptive_tb_cxr" answerConceptIds="1065,1066"/>
				</p>
			</div>

			<div id="return_visit_date_div">
				<p>
					Next Appointment Date
					<br/>
					<obs conceptId="5096" id="return_visit_date"  allowFutureDates="true"/>
				</p>
			</div>

		
			<p>
				Test ID
				<br/>
				<obs conceptId="164350" id="test_id" maxlength="20" />
			</p>

        </div>
		
		<ifMode mode="ENTER">
			<script type="text/javascript">
				$j('#scnngcxr_diagnosis_other_div').hide();
				$j('#abnormal_detail_div').hide();
			</script>
		</ifMode>
			
	</section>

	<submit/>


<script type="text/javascript">

	var dateCreatedArr =[];
	var encounters =[];
	var sortedArray =[];
	var dataArr = [];
	 var orderArr = [];
	 var reasonXray = [];
	
	var orderIDEncounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('ce149af7-1ec9-4aae-be24-813087010277'))  $fn.getObs($encounter, '165715').getValueAsString($!{locale}) #end"/>";
	var orderIDArray = orderIDEncounters.split("  ");
	var cad4tb=false,cad_other=false;
	
	//var patientUuid = "";
    var patientUuid  = '<lookup expression="patient.uuid"/>';
	var conceptUuid =  "cb4d83f7-143c-450b-accf-ce2784d1084c";
	
	
		
	var startDate = new Date();
	var close_contact = true;
	var is_checked = false; 

	var tomorrow = new Date();
	tomorrow.setDate(tomorrow.getDate() + 2);
	var typeXrayArray;

	jQuery( document ).ready(function() {
		
		getLatestObs(patientUuid,conceptUuid);
		
		<ifMode mode="ENTER">
			$j('#cad4tb_score_div').hide();
			$j('#cad_score_range_div').hide();
			getField("presumptive_tb_cxr.value").prop('disabled',true);
			$j('#return_visit_date_div').hide();
			setValue('return_visit_date.value',);
		</ifMode>
				
		
		
		 getField("order_id.value").prop('disabled',true);
		 getField("cad_score_range.value").prop('disabled',true);
		 
		 var is_visible = false;

		<ifMode mode="VIEW">
			is_visible = true;
		</ifMode>
		
		if(is_visible) {
			document.getElementById('order_id_list').style.display = 'none';
		}
		else {
			document.getElementById('order_id_list').style.display = 'block';
		}
		  
		 var encounters1 = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('ce149af7-1ec9-4aae-be24-813087010277'))  $fn.getObs($encounter, '165715').getValueAsString($!{locale}) #end"/>";
		 var result1 = encounters1.replace(/\s\s+/g, '@');
         var resultValueArray1 = result1.split('@');
		 orderArr = resultValueArray1;
		 
		 var encounters2 = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('ce149af7-1ec9-4aae-be24-813087010277'))  $fn.getObs($encounter, '165824').valueCoded.name #end"/>";
		var result2 = encounters2.replace(/\s\s+/g, '@');
		reasonXray = result2.split('@');

		
		
		
		resultValueArray1 = sortArray(resultValueArray1);
		 var orders = document.getElementById('order_id_list');
		 orders.options.length = 0;
		 for (i = 0; i &lt; resultValueArray1.length; i++) {
			    if(resultValueArray1[i] != '' &amp;&amp; resultValueArray1[i]!="$fn.getObs($encounter, '165715').getValueAsString($!{locale})") {
				   orders.options[i]= new Option(resultValueArray1[i]);
				}
		}
		

        <ifMode mode="ENTER">		
			
		</ifMode>	

		var val = getValue('order_id.value');		
		<ifMode mode="ENTER">
					for(j = 0; j &lt; orderIDArray.length; j++){
						if(orderIDArray[j].includes(val)){
							/*typeValue=typeXrayArray[j];
							if(typeXrayArray[j].includes("CHEST XRAY")){
								$j('#cad4tb_score_div').show();
								$j('#cad_score_range_div').show();
								$j('#cad4tb_div').hide();
							}else{
								$j('#cad4tb_score_div').hide();
								$j('#cad_score_range_div').hide();
								$j('#cad4tb_div').show();
							}*/
						}
					}
				</ifMode>		
        });
		
		jQuery(function() {
		var facilities = document.getElementById("order_id_list");
               facilities.onchange = function(){
                var e = document.getElementById("order_id_list");
				var multiSelectValues = getMultiSelectByIndex((e.options.selectedIndex)-1).toString();
				
				
				var e = document.getElementById("order_id_list");
				var ordersFinal = e.options[e.selectedIndex].value;
				setValue('order_id.value', ordersFinal);
				
				
				var reason="";
				for(i=0; i &lt; orderArr.length; i++){
					if(orderArr[i].includes(ordersFinal)){
						reason = reasonXray[i];
						
						if(reason.includes("IDENTIFIED PATIENT THROUGH SCREENING")){
							$j('#presumptive_tb_cxr_div').show();
								}
						else{
							$j('#presumptive_tb_cxr_div').hide();
							setValue('presumptive_tb_cxr.value',);
						}
					}
				}
				if(multiSelectValues.length>16){
					$j('#cad4tb_score_div').show();
					$j('#cad_score_range_div').show();
					$j('#radiological_diagnosis_div').show();
				}else{
					if(multiSelectValues.includes('CHEST XRAY')){
						$j('#cad4tb_score_div').show();
						$j('#cad_score_range_div').show();
						
						$j('#radiological_diagnosis_div').hide();
						$j('#abnormal_detail_div').hide();
						setValue('radiological_diagnosis.value',);
					}
					else if(multiSelectValues.includes('X-RAY, OTHER')){
						$j('#radiological_diagnosis_div').show();
						
						
						$j('#cad4tb_score_div').hide();
						$j('#cad_score_range_div').hide();	
					}
					
				}
				
				
				getField('order_id.value').change();	
				
				
				
				}
		});


		function getMultiSelectByIndex(index){
			var encounterUuid ="";
			var latestDisplay =[];
			var counter =0;

			//we need to get the dateCreate
			var indexLocatedDateCreate = sortedArray[index];
			//this loop to get the encounter uuid on the specific datecreate.
			for(j = 0; j &lt; dataArr.results.length; j++) {

			if(dataArr.results[j].dateCreated == indexLocatedDateCreate) {
			encounterUuid = encounters[j].uuid;
			}
			}
			//we get the display values from encounter uuid...
			for(k = 0; k &lt; encounters.length; k++){
			if(encounters[k].uuid== encounterUuid) {
			var value = dataArr.results[k].display.toString().replace("TYPE OF X RAY:","");
			if(value != ""){
			latestDisplay[counter] = value ;
			
			counter++;
				}
				
				}
			}
			return latestDisplay;


		}

jQuery(function() {

			jQuery('#abnormal_detail_div input[type=checkbox]').on('change', function () {
				var len = jQuery('#abnormal_detail_div input[type=checkbox]:checked').length;
                if (len > 0) {
                    close_contact = false;
                 }
                 else{
                    close_contact = true;
}
               }).trigger('change');
					
			if(jQuery) {
				$j(":checkbox").click(function(){
				 is_checked = document.getElementById('w28').checked;
					if( (getValue('radiological_diagnosis.value')==165706 || getValue('radiological_diagnosis.value')==165707 ) &amp;&amp; is_checked == true){
						$j('#scnngcxr_diagnosis_other_div').show();
					}else{
						 $j('#scnngcxr_diagnosis_other_div').hide();
                                                 is_checked = false;
					}
				});
				
				getField('radiological_diagnosis.value').change(function() {
					if(getValue('radiological_diagnosis.value')==165706 || getValue('radiological_diagnosis.value')==165707){
						$j('#abnormal_detail_div').show();
                        if(document.getElementById('w28').checked)
						{ 
							$j('#scnngcxr_diagnosis_other_div').show();
							is_checked = true;
						}
						setValue('presumptive_tb_cxr.value',1065);
					}
					else if(getValue('radiological_diagnosis.value')==1115){
						$j('#abnormal_detail_div').hide();
						$j('#scnngcxr_diagnosis_other_div').hide();
						is_checked = false;
						setValue('presumptive_tb_cxr.value',1066);
					}
					else{
						$j('#abnormal_detail_div').hide();
						$j('#scnngcxr_diagnosis_other_div').hide();
						is_checked = false;                     
					}
					if(getValue('radiological_diagnosis.value')==165706){
						$j('#return_visit_date_div').show();
						setValue('return_visit_date.value',tomorrow.getFullYear() + '-' +(tomorrow.getMonth() + 1) + '-' + tomorrow.getDate());
					}
					else {
						$j('#return_visit_date_div').hide();
						setValue('return_visit_date.value',);
					}


				});
				
				
				getField('cad4tb_score.value').change(function() {
					if(getValue('cad4tb_score.value')&gt;0 &amp;&amp; getValue('cad4tb_score.value')&lt;70){
						setValue('cad_score_range.value', 165800);
						$j('#return_visit_date_div').hide();
						setValue('return_visit_date.value',);
						setValue('presumptive_tb_cxr.value',1066);
					}else if(getValue('cad4tb_score.value')&gt;69){
						setValue('cad_score_range.value', 165801);
						$j('#return_visit_date_div').show();
						setValue('return_visit_date.value',tomorrow.getFullYear() + '-' +(tomorrow.getMonth() + 1) + '-' + tomorrow.getDate());
						setValue('presumptive_tb_cxr.value',1065);
					}
				});
			}

});

	function getLatestObs(pUuid,cUuid){

            //+"&amp;limit=1&amp;startIndex=1"
            var results ="";
            jQuery.ajax({
                url: "/openmrs/ws/rest/v1/obs?v=custom:(dateCreated,display,encounter:(uuid))&amp;patient="+pUuid+"&amp;concept="+cUuid,
                type: 'get',
                dataType: 'json',
                success: function(data) {
                    if(JSON.stringify(data) === JSON.stringify({"results":[]})) ///if we get the empty value then return empty string
                        results = "";
                    else{
							dataArr = data;
                          results = parseObs(data);
		     }

                },
                async:false
            });
            return results;
        }

        function parseObs(data){

            //var dateCreatedArr =[];
            //var encounters =[];

            for(j = 0; j &lt; data.results.length; j++){
                    dateCreatedArr[j] = data.results[j].dateCreated;
                    encounters[j] = data.results[j].encounter;
            }
			
			
			sortedArray =sortArray(dateCreatedArr);
			sortedArray = sortedArray.filter(function(item, pos) {
			return sortedArray.indexOf(item) == pos;
			});
			return sortedArray ;

            //return   getMultiSelectValues(sortArray(dateCreatedArr),encounters,data);

        }

        function sortArray(dateCreatedArr){
              var vaDate = dateCreatedArr.slice().sort(function(a, b) {
                    return new Date(a) - new Date(b);
                });

            return vaDate;
        }

        function getMultiSelectValues(sortedArray,encounters,data){
            var encounterUuid ="";
            var latestDisplay =[];
            var counter =0;
            var latestDateCreate = sortedArray[sortedArray.length-1];
            for(j = 0; j &lt; data.results.length; j++) {

                if(data.results[j].dateCreated == latestDateCreate) {
                    encounterUuid = encounters[j].uuid;
                }
            }
            //now we need the check how many value are select by user
            for(k = 0; k &lt; encounters.length; k++){
                
                    if(encounters[k].uuid== encounterUuid) {
                        var value = data.results[k].display.toString().replace("TYPE OF X RAY:","");
						if(value != ""){
                            latestDisplay[counter] = value ;
                            counter++;
                        }
                }
            }
            return latestDisplay;
        }

function convert(str) {
    var mnths = { 
        Jan:"01", Feb:"02", Mar:"03", Apr:"04", May:"05", Jun:"06",
        Jul:"07", Aug:"08", Sep:"09", Oct:"10", Nov:"11", Dec:"12"
    },
    date = str.split(" ");

    return [ date[3], mnths[date[1]], date[2] ].join("-");
}

	jQuery(function() {
		getField('radiological_diagnosis.value').change(function() {
		 if(getValue('radiological_diagnosis.value') == 165706 || getValue('radiological_diagnosis.value') == 165707){
					setValue('presumptive_tb_cxr.value', 1065);

		}

		else if(getValue('radiological_diagnosis.value') == 165709){
									 setValue('presumptive_tb_cxr.value', 1066);

		}
	});
 });


beforeSubmit.push(function() {
		var error=true;
		setValue('scnngcxr_diagnosis_other.error', '');
		setValue('radiologist_remarks.error', '');
		setValue('test_id.error', '');
		setValue('order_id.error', '');
		setValue('cad_score_range.error', '');
		setValue('return_visit_date.error', '');
		setValue('cad4tb_score.error', '');
		setValue('radiological_diagnosis.error', '');

	

				<ifMode mode="ENTER">	
			var OrderIdEncounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('6227ef98-7b8c-4b40-b471-5c5b55457963'))  $fn.getObs($encounter, '165715').getValueAsString($!{locale}) #end"/>";
            var OrderIdResult = OrderIdEncounters.replace(/\s\s+/g, '@');
            var OrderIdResultValueArray = OrderIdResult.split('@');
			
			 for(var j = OrderIdResultValueArray.length-1; 0 &lt;= j; j--){
                if((OrderIdResultValueArray[j]).trim() == (getValue('order_id.value')).trim()){                //if both ids match use 'j' index to retrieve last food intake value                      
                                             
                    getField('order_id.error').html('Result for this Order ID already submitted.').show();
					error = false;
                    break;
                }
                else {
                     getField('order_id.error').html('').hide();
                }
			 }
            
			//Code for Checking if Test ID already exists.
            myRegExp = new RegExp(/^[a-zA-Z0-9-,.'"()#&amp;:;,'"+%$*=!| \\/]{1,20}$/);
			
	        var encounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('6227ef98-7b8c-4b40-b471-5c5b55457963'))  $fn.getObs($encounter, '164350').getValueAsString($!{locale}) #end"/>";
            var result = encounters.replace(/\s\s+/g, '@');
            var resultValueArray = result.split('@');	

			if(getValue('test_id.value')!=''){
				if(!myRegExp.test(getValue('test_id.value'))) {
					getField('test_id.error').html('Not a valid ID.').show();
					error=false;
				}
				 else if(getValue('test_id.value').length > 0 &amp;&amp; getValue('test_id.value').trim() ==''){
				   getField('test_id.error').html('Invalid Test ID').show();
				   error=false;
				}
				else{
					for(var j = resultValueArray.length-1; 0 &lt;= j; j--){
					if((resultValueArray[j]).trim() == (getValue('test_id.value')).trim()){
						 getField('test_id.error').html('').show();
							alert('Test ID already exists.');
							error =false;
							//if both ids match use 'j' index to retrieve last food intake value                      
							
							break;
						   }
					else {
						 getField('test_id.error').html('').hide();
					}       

					}	
			   
				}
			}
			           
			</ifMode>
           
 

		 if((getValue('radiological_diagnosis.value')==165706 || getValue('radiological_diagnosis.value')==165707 ) &amp;&amp; is_checked == true &amp;&amp; getValue('scnngcxr_diagnosis_other.value')==''){
							getField('scnngcxr_diagnosis_other.error').html('This field can not be null').show();
							error=false;
				 }

		else if((getValue('radiological_diagnosis.value')==165706 || getValue('radiological_diagnosis.value')==165707 ) &amp;&amp; is_checked == true &amp;&amp;  getValue('scnngcxr_diagnosis_other.value').length > 0 &amp;&amp; getValue('scnngcxr_diagnosis_other.value').trim() ==''){
							getField('scnngcxr_diagnosis_other.error').html('Invalid name').show();
							error=false;
				 }

		 else{
					  getField('scnngcxr_diagnosis_other.error').html('').hide();
					 
						 }


if(getValue('radiologist_remarks.value').length > 0 &amp;&amp; getValue('radiologist_remarks.value').trim() ==''){
					getField('radiologist_remarks.error').html('Invalid value').show();
					error=false;
	     }

 else{
              getField('radiologist_remarks.error').html('').hide();
             
                 }
			if((getValue('radiological_diagnosis.value')==165706 || getValue('radiological_diagnosis.value')==165707 ) &amp;&amp; close_contact == true) {
				getField('close_contact_first.error').html('Please select a value.').show();
			    error=false;
			}
			else {
			   getField('close_contact_first.error').html('').hide();
			}
		if(getValue('radiological_diagnosis.value')==165706 &amp;&amp; getValue('return_visit_date.value').trim() ==''){	
			getField('return_visit_date.error').html('This field can not be null').show();
			error=false;
	     }else{
			getField('return_visit_date.error').html('').hide();
		}			
		if(getValue('cad4tb_score.value').trim() ==''){
			getField('cad4tb_score.error').html('This field can not be null').show();
			error=false;
	    }
		else{
			getField('cad4tb_score.error').html('').hide();
		}
		

		if(error==false){
            return false;
        }
        else{
			getField("order_id.value").prop('disabled',false);
			getField("cad_score_range.value").prop('disabled',false);
            getField("presumptive_tb_cxr.value").prop('disabled',false);

			var endDate = new Date();
			var timeDiff = Math.abs(endDate.getTime() - startDate.getTime());
			var diffSec = timeDiff/1000;
			alert(diffSec + " seconds to fill form");
            return true;
        }
});

</script>


<!-- END OF FORM

Simple examples to copy-and-paste. Full reference at http://wiki.openmrs.org/x/kg8z

SECTION
	<section headerLabel="\#. Title">
		Content
	</section>

NUMERIC OBSERVATION
	<obs conceptId="id-of-numeric-concept" labelText="Label before"/>

DATE OBSERVATION
	<obs conceptId="id-of-date-concept" labelText="Label before"/>

CODED OBSERVATION
(as a dropdown)
	<obs conceptId="id-of-coded-concept" labelText="Label before"/>
(as radio buttons)
	<obs conceptId="id-of-coded-concept" labelText="Label before" style="radio"/>
(as an autocomplete)
	<obs conceptId="id-of-coded-concept" labelText="Label before" style="autocomplete" answerClasses="Diagnosis"/>
(as a checkbox for a specific answer)
	<obs conceptId="id-of-coded-concept" labelText="Label before" answerConceptId="id-of-answer-concept" answerLabel="label for answer"/>
(as a dropdown with specific choices)
	<obs conceptId="id-of-coded-concept" labelText="Label before" answerConceptIds="concept-id-1,concept-id-2,concept-id-3" answerLabels="Label 1,Label 2, Label 3"/>


FREE TEXT OBSERVATION
(as a normal text field)
	<obs conceptId="id-of-text-concept" labelText="Label before"/>
(as a textarea)
	<obs conceptId="id-of-text-concept" labelText="Label before" rows="4" cols="80"/>
-->
</htmlform>