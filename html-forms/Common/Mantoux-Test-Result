<htmlform>
	<!-- Autogenerated example form  (template from 01-Nov-2010 -->
	<macros>
		paperFormId = (Fill this in)
		headerColor =#009d8e
		fontOnHeaderColor = white
	</macros>

	<style>
		.section {
			border: 1px solid $headerColor;
			padding: 2px;
			text-align: left;
			margin-bottom: 1em;
		}
		.sectionHeader {
			background-color: $headerColor;
			color: $fontOnHeaderColor;
			display: block;
			padding: 2px;
			font-weight: bold;
		}
		table.baseline-aligned td {
			vertical-align: baseline;
		}
	</style>

	<span style="float:right">Paper Form ID: $paperFormId</span>
	<h2>Childhood TB-Mantoux Test Result (v1.0.0)</h2>

	<section headerLabel="1. Encounter Details">
		<table class="baseline-aligned">
			<tr>
				<td>Date:</td>
				<td><encounterDate default="today"  id="encounter_date"/></td>
			</tr>
			<tr>
				<td>Location:</td>
				<td><encounterLocation default="2"  /></td>
			</tr>
			<tr>
				<td>Provider:</td>
				<td><encounterProvider default="currentUser" type="autocomplete"/></td>
			</tr>
		</table>
	</section>

	<section headerLabel="2. Mantoux Test Result">
              <div>
			  
				<p>
					Order ID 
					<br/>
					<select id="orderids"></select> <b style="color:red;"> * </b>
					<obs id="order_id" conceptId="165715" required="false" size="15" />
				</p>

				 <p>
					Test ID
					<br/>
					<obs conceptId="164350" id="test_id" maxlength="20" /> 
				</p>
			
			
				<p>
					Tuberculin Skin Test Result
					<br/>
					<obs conceptId="164870" id="tuberculin_test_result" answerConceptIds="164866,164867,164868" required="true" answerLabels="&lt; 5mm, 5-9 mm, >= 10 mm"/> 
				</p>
			
				<p> 
					Interpretation of Mantoux Test
					<br/>
					<obs conceptId="164875" answerConceptIds="703,664" answerLabels="Positive,Negative" id="mantoux_test_interpretation" required="true" />					
				</p>
					
					
			

              </div>
	</section>

	<submit/>


<script type="text/javascript">


	var encounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('8568314a-2914-4cb9-b222-41e7abb0d3a7'))  $fn.getObs($encounter, '165715').getValueAsString($!{locale}) #end"/>";
		var result = encounters.replace(/\s\s+/g, '@');
		var resultValueArray = result.split('@');
		
	
	var encounters1 = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('8568314a-2914-4cb9-b222-41e7abb0d3a7'))  $fn.getObs($encounter, '164226').getValueAsString($!{locale}) #end"/>";
	var result1 = encounters1.replace(/\s\s+/g, '@');
    var weightPercentileResult = result1.split('@');
	
	
var startDate = new Date();
jQuery(function() {
		getField('tuberculin_test_result.value').change(function(){
					var e = document.getElementById("orderids");
					var orderID = e.options[e.selectedIndex].text;
					var weightPercent;
					for(i=0; i &lt; resultValueArray.length; i++){
							if(resultValueArray[i].includes(orderID)){
							weightPercent = weightPercentileResult[i];
						}	
						}
					
					if(getValue('tuberculin_test_result.value') == 164868){
                        setValue('mantoux_test_interpretation.value',703);
                    }else if(getValue('tuberculin_test_result.value') == 164867){
						if(weightPercent.includes("&lt;=5th percentile")){
							setValue('mantoux_test_interpretation.value',703);
						}
					}
					else{
						setValue('mantoux_test_interpretation.value',664);
					}
			});
			
			 getField("order_id.value").prop('disabled',true);
		
		var orders = document.getElementById("orderids");
			orders.onchange = function(){
                var e = document.getElementById("orderids");
				var orderID = e.options[e.selectedIndex].text;
				setValue('order_id.value',orderID);				
				
		}


});


	var check=true;
	var orders = document.getElementById('orderids');
	orders.remove(0);
	var val=1;
	if(resultValueArray.length==1){
		check=false;
	}else{
		for (i = 0; i &lt; resultValueArray.length; i++) {
			if(resultValueArray[i].length &gt; 0 &amp;&amp; resultValueArray[i]!="$fn.getObs($encounter, '165715').getValueAsString($!{locale})"){
				orders.options[val]= new Option(resultValueArray[i]);
				val = val + 1;
			}
		}
	}

beforeSubmit.push(function() {
		var error=true;
		setValue('test_id.error', '');
        <ifMode mode="ENTER">	
			var OrderIdEncounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('e640410f-71f8-4b63-9217-2d35aeb9c28a'))  $fn.getObs($encounter, '165715').getValueAsString($!{locale}) #end"/>";
            var OrderIdResult = OrderIdEncounters.replace(/\s\s+/g, '@');
            var OrderIdResultValueArray = OrderIdResult.split('@');
			if(getValue('order_id.value')!=''){
			 for(var j = OrderIdResultValueArray.length-1; 0 &lt;= j; j--){
                if((OrderIdResultValueArray[j]).trim() == (getValue('order_id.value')).trim()){                //if both ids match use 'j' index to retrieve last food intake value                      
                    getField('order_id.error').html('Result for this Order ID already submitted.').show();
					error = false;
                    break;
                }
                else {
                     getField('order_id.error').html('').hide();
                }
			 }
			}else{
					getField('order_id.error').html('Order ID can not be null').show();
					error = false;
			}
			
			
				//Code for Checking if Test ID already exists.
				myRegExp = new RegExp(/^[a-zA-Z0-9-,.'"()#&amp;:;,'"+%$*=!| \\/]{1,20}$/);
				
				var encounters = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('e640410f-71f8-4b63-9217-2d35aeb9c28a'))  $fn.getObs($encounter, '164350').getValueAsString($!{locale}) #end"/>";
		  
				var result = encounters.replace(/\s\s+/g, '@');
				var resultValueArray = result.split('@');

				if(getValue('test_id.value')!=''){
					if(!myRegExp.test(getValue('test_id.value'))) {
						 
						getField('test_id.error').html('Not a valid ID.').show();
						error=false;
					}
					else if(getValue('test_id.value').length > 0 &amp;&amp; getValue('test_id.value').trim() ==''){
						  getField('test_id.error').html('Invalid Test ID.').show();
						  error=false;
					}
					else{
						getField('test_id.error').html('').hide();

						for(var j = resultValueArray.length-1; 0 &lt;= j; j--){
						if((resultValueArray[j]).trim() == (getValue('test_id.value')).trim()){                //if both ids match use 'j' index to retrieve last food intake value                      
						error =false;
									
							getField('test_id.error').html('Test ID already exists.').show();
									break;
								}
						else {
							 getField('test_id.error').html('').hide();
						}       
						}						
					}
				}
			</ifMode>
		
		
        if(check==false){
            alert('Can not be Submit. No test order form found');
            error=false;
        }
		

		if(error==false){
            return false;
        }
        else{
			getField("order_id.value").prop('disabled',false);
			var endDate = new Date();
			var timeDiff = Math.abs(endDate.getTime() - startDate.getTime());
			var diffSec = timeDiff/1000;
			alert(diffSec + " seconds to fill form");
            return true;
        }
});

</script>


</htmlform>