<htmlform>
	<!-- Autogenerated example form  (template from 01-Nov-2010 -->
	<macros>
		paperFormId = (Fill this in)
		headerColor =#009d8e
		fontOnHeaderColor = white
	</macros>

	<style>
		.section {
			border: 1px solid $headerColor;
			padding: 2px;
			text-align: left;
			margin-bottom: 1em;
		}
		.sectionHeader {
			background-color: $headerColor;
			color: $fontOnHeaderColor;
			display: block;
			padding: 2px;
			font-weight: bold;
		}
		table.baseline-aligned td {
			vertical-align: baseline;
		}
	</style>

	<span style="float:right">Paper Form ID: $paperFormId</span>
	<h2>PMDT-Follow-up Vitals (v0.0.1)</h2>

	<section headerLabel="1. Encounter Details">
		<table class="baseline-aligned">
			<tr>
				<td>Date:</td>
				<td><encounterDate default="today"/></td>
			</tr>
			<tr>
				<td>Location:</td>
				<td><encounterLocation default="2"  tags="PMDT" /></td>
			</tr>
			<tr>
				<td>Provider:</td>
				<td><encounterProvider default="currentUser" type="autocomplete"/></td>
			</tr>
		</table>
	</section>

	<section headerLabel="2. Follow-up Vitals">
		<div>	
			<p>
			Visit Date
			<br/>
			<obs id="return_visit_date" conceptId="5096" defaultValue="today" required="true" />
			</p>

			<p>
			Type of assessment
			<br/>
			<obs id="assessment_type" conceptId="165103" answerConceptIds="165102,165040,165041,165042,165036" answerLabels="Two week assessment,Planned monthly assessment,End of treatment assessment,Post-treatment assessment,Other assessment" required="true"/>
			</p>

			<div id="display_other_assessment">
			<p>
			Other assessment reason
			<br/>
			<obs id="other_assessment" conceptId="165036" maxlength="100" />
			</p>
			</div>
 
			<div id="display_followup">
			<p>
			Month of treatment
			<br/>
			<obs id="followup_month" conceptId="164327"  maxlength="2" />
			</p>
			</div>

			<p>
			Weight (kg)
			<br/>
			<obs id="weight" conceptId="5089" maxlength="6" required="true"/>
			</p>

			<p>
			Height (cm)
			<br/>
			<obs id="height" conceptId="5090" maxlength="6" required="true"/>
			</p>

			<p>
			BMI (kg/mÂ²)
			<br/>
			<obs id="bmi" conceptId="1342"  maxlength="5" required="true"/>
			</p>

			<p>
			Temperature (F)
			<br/>
			<obs id="temperature" conceptId="166047" maxlength="5" required="true"/>
			</p>

			<p>
			Pulse
			<br/>
			<obs id="hr" conceptId="5087" maxlength="3"/>
			</p>

			<p>
			Respiratory Rate
			<br/>
			<obs id="resp_rate" conceptId="5242" maxlength="2"/>
			</p>

			<p>
			Blood Pressure
			<br/>
			<obs id="sbp" conceptId="5085" defaultValue="0" />/<obs id="dbp" conceptId="5086" defaultValue="0" />
			 
			</p>

			<p>
			SpO? (%)
			<br/>
			<obs id="blood_oxygen_saturation" conceptId="5092"/>
			</p>

			<includeIf logicTest="GENDER = F">
			<p>
			Is the patient currently pregnant?
			<br/>
			<obs id="currently_pregnant" conceptId="165105" answerConceptIds="1065,1066,1067,1175" answerLabels="Yes,No,Unknown,Not applicable" defaultValue="1066"/>
			</p>
            </includeIf>
			
			<includeIf logicTest="GENDER = M">
			<p>
			Is the partner currently pregnant?
			<br/>
			<obs id="partner_currently_pregnant" conceptId="166060" answerConceptIds="1065,1066,1067,1175" answerLabels="Yes,No,Unknown,Not applicable" defaultValue="1066"/>
			</p>
			</includeIf>
			
			<div id="time_taken_div">
			<p> 
			Time taken to fill form
			<br/>
			<obs id="time_taken" conceptId="165044" />
			</p>
			</div>
		</div>
	</section>

	<submit/>
	
	<script type="text/javascript">
		var startDate = new Date();	
	
	    var other_assessment = jQuery("#display_other_assessment");
		var display_followup = jQuery("#display_followup");
		

 
jQuery( document ).ready(function() {

		var timeTakenDiv = jQuery("#time_taken_div");
		timeTakenDiv.hide();
		
		getField("followup_month.value").prop("disabled", true);
		getField("bmi.value").prop("disabled", true);
		
		<ifMode mode='VIEW' include="false"> 
								 		
		if(getValue('assessment_type.value') == 165036 ){
			other_assessment.show();
		}
		else{
			other_assessment.hide();					
		}

		if(getValue('assessment_type.value') == 165040 ){
			if(! isRegistrationFormFilled() ){
				alert("Please fill PMDT-Treatment Registration Form first ");
			}
			else{
				setValue('followup_month.value',getFollowupMonth());
				display_followup.show();
			}
		}
		else{
			display_followup.hide();					
		}
				  
             
		</ifMode>
		
		});

function getFollowupMonth(){		
		var latestEncounter = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('f2038177-d0ee-4856-ab41-2b9bad0e949e'))  $fn.getObs($encounter, '164412').getValueAsString($!{locale}) #end"/>";		
		var registrationDateResult = latestEncounter.replace(/\s\s+/g, '@');
        var registrationDateResultArray = registrationDateResult.split('@');
		var registrationDate = registrationDateResultArray[registrationDateResultArray.length-1];
		
		var visitDate=getValue('return_visit_date.value') ;		   
		
		var date1 = new Date(registrationDate);
		var date2 = new Date(visitDate);
		var timeDiff = date2.getTime() - date1.getTime();
		var diffDays = Math.floor(timeDiff / (1000 * 3600 * 24));
        var followupMonth=Math.floor(diffDays/30);
		return followupMonth;
}

function isRegistrationFormFilled(){
		var isFilled=true;
		var latestEncounter = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('f2038177-d0ee-4856-ab41-2b9bad0e949e'))  $fn.getObs($encounter, '164412').getValueAsString($!{locale}) #end"/>";		
		var registrationDateResult = latestEncounter.replace(/\s\s+/g, '@');
        var registrationDateResultArray = registrationDateResult.split('@');
		var registrationDate = registrationDateResultArray[registrationDateResultArray.length-1];
		
		if( registrationDate==null || registrationDate=='' ){
			isFilled=false;
		}
		return isFilled;
}		

function calculateBMI(){

		var weight=getValue('weight.value');
		var valid=true;
		if(weight.trim() == ""  || getValue('weight.value') == null ){
			valid=false;
		}
		else if(! jQuery.isNumeric(weight)){
			valid=false;
		}
		else if( weight &lt; 0.5   ){
			valid=false;	
		}
		else if( weight &gt; 700  ){
			valid=false;	
		}

		var height=getValue('height.value');
		if(height.trim() == ""  || getValue('height.value') == null ){
			valid=false;
		}
		 else if(! jQuery.isNumeric(height)){
			valid=false;
		}
		else if( height &lt; 10  ){
			valid=false;	
		}
		else if( height &gt; 272  ){
			valid=false;	
		}

		if(valid==true){
			var weight = getValue('weight.value');
			var height = getValue('height.value');
			var finalBmi = weight/(height/100*height/100);
			
			if(finalBmi &lt; 0 || finalBmi &gt; 200)
			{
			   getField('bmi.error').html('Invalid BMI. Something is wrong with Weight and Height values combination. Please change Height or Weight values.').show();
			   setValue('bmi.value', '');
			   valid=false;
			}
			else {
				getField('bmi.error').html('').hide();
				setValue('bmi.value', parseFloat(finalBmi).toFixed(1));				
			}								
		}
		else if(getValue('weight.value')!='' &amp;&amp; getValue('height.value')!=''){
				getField('bmi.error').html('Invalid BMI. Something is wrong with Weight and Height values combination. Please change Height or Weight values.').show();
				setValue('bmi.value', '');
				valid=false;
		}
		else {
			setValue('bmi.value', '');
			getField('bmi.error').html('').hide();
			valid=false;
		}

}
		
jQuery(function() {
			getField('assessment_type.value').change(function() {
				
				if(getValue('assessment_type.value') == 165036 ){
					other_assessment.show();
				}
				else{
					setValue('other_assessment.value', "");  
					other_assessment.hide();				
				}
				
				if(getValue('assessment_type.value') == 165040 ){
					if(! isRegistrationFormFilled() ){
						alert("Please fill PMDT-Treatment Registration Form first ");
					}
					else{//set followup month acc to calculation
						setValue('followup_month.value',getFollowupMonth());						
					}
					display_followup.show();
					
				}
				else{
					setValue('followup_month.value', "");  
					display_followup.hide();					
				}				
			});	

			getField('return_visit_date.value').change(function() {	
				
				if(!isRegistrationFormFilled()) {
					alert("Please fill Treatment Registration Form first ");
				}
				else{
					//set foolowup month acc to calculation
					setValue('followup_month.value',getFollowupMonth());
				}				
			});
			
			//calculate BMI value when weight change
			getField('weight.value').change(function() {
				calculateBMI();
			});
			//calculate BMI value when height change
			getField('height.value').change(function() {
				calculateBMI();
			});
});
		
beforeSubmit.push(function() {

	setValue('other_assessment.error','');
	setValue('bmi.error','');
	setValue('temperature.error','');
	setValue('resp_rate.error','');
	setValue('dbp.error','');
	setValue('followup_month.error','');
	
	var valid=true;
	
	if( getValue('assessment_type.value') == 165040 &amp;&amp; getValue('return_visit_date.value') != '') {
	
		if(! isRegistrationFormFilled() ){
			getField('followup_month.error').html('Please fill PMDT-Treatment Registration Form first').show();
			valid = false;
		}
		
		else if(getValue('followup_month.value') &lt; 0) {
			getField('followup_month.error').html('Please select correct visit date. Follow-up Assessment should be after Treatment registration.').show();
			valid = false;
		}
		else if(getValue('followup_month.value') &gt; 24) {
			getField('followup_month.error').html('Follow up month can not be greater than 24. Please select correct visit date').show();
			valid = false;
		}
		else {
			getField('followup_month.error').html('').hide();
		}
	
	}

			
	if(getValue('assessment_type.value') == 165036 &amp;&amp; (getValue('other_assessment.value') =='' ) ){	
		getField('other_assessment.error').html('Please input a value.').show();
		valid=false;		
	}
	else{
		getField('other_assessment.error').html('').hide();
	}
	
	//check temperature value
    var temperature=getValue('temperature.value');
	if(temperature.trim() == ""  || getValue('temperature.value') == null ){
		getField('temperature.error').html('This field can not be empty').show();
		valid=false;
	}
    else if(! jQuery.isNumeric(temperature)){
		getField('temperature.error').html('Not a Number').show();
		valid=false;
    }
    else if( temperature &lt; 57 ){
		getField('temperature.error').html('Cannot be less than 57').show();
		valid=false;	
	}
    else if( temperature &gt; 115 ){
	 Â Â Â Â getField('temperature.error').html('Cannot be greater than 115').show();
		 valid=false;	
	}
		
	var resp_rate=getValue('resp_rate.value');
    if(resp_rate == ""  || getValue('resp_rate.value') == null ){
	// do nothing as this field is not mandatory	
	}
	else{
		if(!(resp_rate.match(/^\d+$/))){
			getField('resp_rate.error').html('Not an integer').show();
			valid=false;
        }
        else if( resp_rate &lt; 0  ){
	 Â Â Â Â Â Â Â getField('resp_rate.error').html('Cannot be less than 0').show();
			valid=false;	
		}
        else if( resp_rate &gt; 99 ){
	 Â Â Â Â Â Â Â getField('resp_rate.error').html('Cannot be greater than 99').show();
			valid=false;	
		}
    }
	
	var sbp=getValue('sbp.value');
	var dbp=getValue('dbp.value');
	
	if( (sbp == ""  || getValue('sbp.value') == null) &amp;&amp; !(dbp == ""  || getValue('dbp.value') == null)  ){
	// if one field is filled and other is empty then show error	
			getField('dbp.error').html('Please fill both fields').show();
			valid=false;
	}
	
	if( (dbp == ""  || getValue('dbp.value') == null) &amp;&amp; !(sbp == ""  || getValue('sbp.value') == null)  ){
	// if one field is filled and other is empty then show error
			getField('dbp.error').html('Please fill both fields').show();
			valid=false;	
	}
	
	
	if(valid==true){

		if( getValue('assessment_type.value') == 165040)
		{
			getField("followup_month.value").prop("disabled", false);
		}
			
	    getField("bmi.value").prop("disabled", false);
        setValue('height.value',Number(getValue('height.value')).toFixed(2));  
        setValue('weight.value',Number(getValue('weight.value')).toFixed(2));
		setValue('temperature.value',Number(getValue('temperature.value')).toFixed(1));  
		
		if( !  (  (getValue('blood_oxygen_saturation.value')  &lt; 1) ||  (getValue('blood_oxygen_saturation.value') &gt; 100) ) )
        { 
            setValue('blood_oxygen_saturation.value',Number(getValue('blood_oxygen_saturation.value')).toFixed(2)); 
        } 

	
		var timeTakenDiv = $j("#time_taken_div");
		
		var endDate = new Date();
		var timeDiff = Math.abs(endDate.getTime() - startDate.getTime());
		var diffSec = timeDiff/1000;
		
		timeTakenDiv.show();
		setValue("time_taken.value",diffSec);
		timeTakenDiv.hide();
	
		return true;
}
	return false;
});
		
</script>
</htmlform>