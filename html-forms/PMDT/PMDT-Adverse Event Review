<htmlform>
	<!-- Autogenerated example form  (template from 01-Nov-2010 -->
	<macros>
		paperFormId = (Fill this in)
		headerColor =#009d8e
		fontOnHeaderColor = white
	</macros>

	<style>
		.section {
			border: 1px solid $headerColor;
			padding: 2px;
			text-align: left;
			margin-bottom: 1em;
		}
		.sectionHeader {
			background-color: $headerColor;
			color: $fontOnHeaderColor;
			display: block;
			padding: 2px;
			font-weight: bold;
		}
		table.baseline-aligned td {
			vertical-align: baseline;
		}
	</style>

	<span style="float:right">Paper Form ID: $paperFormId</span>
	<h2>PMDT-Adverse Event Review(v0.0.1)</h2>

	<section headerLabel="1. Encounter Details">
		<table class="baseline-aligned">
			<tr>
				<td>Date:</td>
				<td><encounterDate default="today"/></td>
			</tr>
			<tr>
				<td>Location:</td>
				<td><encounterLocation default="2"  tags="PMDT" /></td>
			</tr>
			<tr>
				<td>Provider:</td>
				<td><encounterProvider default="currentUser" type="autocomplete"/></td>
			</tr>
			
			<tr>
				<td>Adverse Event ID and Term:</td>
				<td><select id="adverse_event_id_term_list"><option>Please Select Adverse Event ID and Term</option>			   
				</select>
				<obs conceptId="166075" id="adverse_event_id_term" required="true" size="60"/></td>
			</tr>
			
			<tr>
				<td>Date of Adverse Event onset</td>
				<td><obs id="date_adverse_event_onset" conceptId="165198"  required="true"/></td>
			</tr>
			
		</table>
	</section>

	<section headerLabel="2. Adverse Event Review Form">
		<div>	

		<p>
		AE review date
		<br/>
		<obs id="date_adverse_event_review" conceptId="165322" defaultValue="today" required="true"/>
		</p>

		<p>
		Did this Adverse Event become serious during the observation period?
		<br/>
		<obs id="adverse_event_review_serious" conceptId="166074" answerConceptIds="1065,1066" answerLabels="Yes,No" defaultValue="1066" required="true"/>
		</p>
		
		<div id="display_adverse_event_serious">
		<p>
		If yes, then seriousness criterion:
		<br/>
		<obs id="adverse_event_serious_criterion" conceptId="162760" answerConceptIds="165318,165319,162693,165320,119975,165321" answerLabels="Hospitalization required / prolonged,Death,Life threatening,Persistent or significant disability / incapacity,Congenital abnormality,Otherwise medically important" defaultValue="165318"  />
		</p>

		<p>
		AE severity at review (1 = Mild; 2 = Moderate; 3 = Severe; 4 = Life-threatening)
		<br/>
		<obs id="adverse_event_severity_review" conceptId="165323" answerConceptIds="164964,164966,164968,164969" answerLabels="1,2,3,4" defaultValue="164964"  />
		</p>
		</div>
		
		<div id="time_taken_div">
		<p> 
		Time taken to fill form
		<br/>
		<obs id="time_taken" conceptId="165044" />
		</p>
		</div>
		</div>
	</section>

	<submit/>
	
	<script type="text/javascript">
		var startDate = new Date();	
	
	    var  adverse_event_serious = jQuery("#display_adverse_event_serious");
 
jQuery( document ).ready(function() {

		 

		var timeTakenDiv = jQuery("#time_taken_div");
		timeTakenDiv.hide();
		 
		getField("adverse_event_id_term.value").prop("disabled", true);
		getField("date_adverse_event_onset.value").prop("disabled", true);
		
		<ifMode mode='VIEW' include="false"> 
		
		//1
		/*if(isAdverseEventFormFilled()){		
			setValue("date_adverse_event_onset.value",getAdverseEventOnsetDate());
			getAdverseEventIdsAndTerms();
		}
		else{
			alert("Please fill PMDT-Adverse Event Form first");
		}*/
		getAdverseEventIdsAndTerms();
		//1
								 		
		if(getValue('adverse_event_review_serious.value') == 1065 ){
		 	adverse_event_serious.show();
		}
		else{
		 	adverse_event_serious.hide();					
		}

		</ifMode>
		
		});
 
//2
function getAdverseEventIdsAndTerms(){
		var allAdverseEncountersIdsAndTerms = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('77b4254d-afab-4b3a-aff3-584e79b2c1e5'))  $fn.getObs($encounter, '166075').getValueAsString($!{locale}) #end"/>";		
		var allAdverseEncountersIdsAndTermsResults = allAdverseEncountersIdsAndTerms.replace(/\s\s+/g, '@');
        var allAdverseEncountersIdsAndTermsResultsArray = allAdverseEncountersIdsAndTermsResults.split('@');

		var allAdverseOutcomeEncountersIdsAndTerms = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('4e17094b-13f4-46c4-b6fa-bafe544be791'))  $fn.getObs($encounter, '166075').getValueAsString($!{locale}) #end"/>";		
		var allAdverseOutcomeEncountersIdsAndTermsResults = allAdverseOutcomeEncountersIdsAndTerms.replace(/\s\s+/g, '@');
        var allAdverseOutcomeEncountersIdsAndTermsResultsArray = allAdverseOutcomeEncountersIdsAndTermsResults.split('@');
		
		var adverseEventIdsAndTerms=[];
		var count=0;
		//if adverse outcome form is not filled then add all adverse event reported in list
		if(allAdverseOutcomeEncountersIdsAndTermsResultsArray.length==1){
			console.log(" adverse out not filled");
			for(k = 1; k &lt; allAdverseEncountersIdsAndTermsResultsArray.length; k++){
				adverseEventIdsAndTerms[count]=allAdverseEncountersIdsAndTermsResultsArray[k];
				count++;
				console.log(" adverse array "+k+" : "+allAdverseEncountersIdsAndTermsResultsArray[k]);
			}
		}
		//else if advese outcome form is filled then campare adverse event and adverse outcome terms and make list for AE that are not finished yet
		else{
			console.log(" adverse out filled");
			for(i = 1; i &lt; allAdverseEncountersIdsAndTermsResultsArray.length; i++){	
				var found = false;
				for(j = 1; j &lt; allAdverseOutcomeEncountersIdsAndTermsResultsArray.length; j++){
					if(allAdverseEncountersIdsAndTermsResultsArray[i].trim()==allAdverseOutcomeEncountersIdsAndTermsResultsArray[j].trim()){
						found = true;
						console.log("found at i "+i+" at j "+j+allAdverseEncountersIdsAndTermsResultsArray[i].trim()+"=="+allAdverseOutcomeEncountersIdsAndTermsResultsArray[j].trim());
					}	
				}
				if(!found){
					//if not found then it means that that particalur AE outcome is not finsihed yet. so add it to list of active AE.
					adverseEventIdsAndTerms[count]=allAdverseEncountersIdsAndTermsResultsArray[i];
					count++;
					console.log(" not found "+i+" : "+allAdverseEncountersIdsAndTermsResultsArray[i]);
				}
			}		
		}
		//if adverse event array is zero that means all adverse terms outcomes are finished or any adverse event is not reported yet
		if(adverseEventIdsAndTerms.length &lt;= 0 ){
		<ifMode mode='ENTER' > 
			alert("Please fill PMDT-Adverse Event Form first");
		</ifMode>
			return false;//means no active AE is found
		}
		else{
			populate(adverseEventIdsAndTerms);
			return true;//means active AE list found.
		}
}
//2

function populate(adverseEventIdsAndTerms) {
						
	var list= document.getElementById('adverse_event_id_term_list');
	
	for (i = 0; i &lt; adverseEventIdsAndTerms.length; i++) { 
		list.options[i+1]= new Option(adverseEventIdsAndTerms[i]);                      
	}
}

//6  onset
function getRelatedAdverseEventOnsetDate(adverseEventIdAndTerm){
		console.log("on select adverse:"+adverseEventIdAndTerm);
		
		var allAdverseEncountersIdsAndTerms = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('77b4254d-afab-4b3a-aff3-584e79b2c1e5'))  $fn.getObs($encounter, '166075').getValueAsString($!{locale}) #end"/>";		
		var allAdverseEncountersIdsAndTermsResults = allAdverseEncountersIdsAndTerms.replace(/\s\s+/g, '@');
        var allAdverseEncountersIdsAndTermsResultsArray = allAdverseEncountersIdsAndTermsResults.split('@');
		
		//if AE list selection is invalid or empty
		if( allAdverseEncountersIdsAndTermsResultsArray.length==1 || adverseEventIdAndTerm=='' || adverseEventIdAndTerm=="Please Select Adverse Event ID and Term"){
			console.log("adverse list invalid or empty ");
			return "";
		}
		
		var index=0;
		for(j = 0; j &lt; allAdverseEncountersIdsAndTermsResultsArray.length; j++){
		console.log("called "+j+adverseEventIdAndTerm.trim());
			if(allAdverseEncountersIdsAndTermsResultsArray[j].trim()==adverseEventIdAndTerm.trim()){
				index = j;
				console.log("adverse found at j "+j+allAdverseEncountersIdsAndTermsResultsArray[j].trim()+"=="+adverseEventIdAndTerm.trim());
			}	
		}
		
		var allAdverseEncountersOnsetDate = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('77b4254d-afab-4b3a-aff3-584e79b2c1e5'))  $fn.getObs($encounter, '165198').getValueAsString($!{locale}) #end"/>";		
		var allAdverseEncountersOnsetDateResults = allAdverseEncountersOnsetDate.replace(/\s\s+/g, '@');
        var allAdverseEncountersOnsetDateResultsArray = allAdverseEncountersOnsetDateResults.split('@');
		
		console.log("adverse list onset date index: "+index);
		return allAdverseEncountersOnsetDateResultsArray[index];
		
}
/*
function getAdverseEventOnsetDate(){
		
		var allAdverseEncountersOnset = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('77b4254d-afab-4b3a-aff3-584e79b2c1e5'))  $fn.getObs($encounter, '165198').getValueAsString($!{locale}) #end"/>";		
		var allAdverseEncountersOnsetResults = allAdverseEncountersOnset.replace(/\s\s+/g, '@');
        var allAdverseEncountersOnsetResultsArray = allAdverseEncountersOnsetResults.split('@');
		var adverseEventOnsetDate = allAdverseEncountersOnsetResultsArray[allAdverseEncountersOnsetResultsArray.length-1];
		return adverseEventOnsetDate;
		
}
*/
//6 onset

//8 date
function isFutureDate() {
	
	var reviewDate =getValue('date_adverse_event_review.value');	
    currentDate = new Date();
    reviewDate = new Date(reviewDate);
	
	currentDate.setHours(0,0,0,0);
	reviewDate.setHours(0,0,0,0);
	
	var timeDiff = currentDate.getTime() - reviewDate.getTime();
	var diffDays = Math.floor(timeDiff / (1000 * 3600 * 24));
  
	console.log("diffDays in future: "+diffDays);
	//false if date is today or past //true if date is future
	if(diffDays &gt;= 0){
		return false;
	}
	else{
		return true;
	}
	
}
function checkOnsetDate() {
	var onsetDate =getValue('date_adverse_event_onset.value');
	var reviewDate =getValue('date_adverse_event_review.value');
	
    onsetDate = new Date(onsetDate);
    reviewDate = new Date(reviewDate);
	
	onsetDate.setHours(0,0,0,0);
	reviewDate.setHours(0,0,0,0);
	
	var timeDiff = reviewDate.getTime() - onsetDate.getTime();
	var diffDays = Math.floor(timeDiff / (1000 * 3600 * 24));
  
	console.log("diffDays: "+diffDays);
	//true if diff is one day //false if diff is in negative or same day
	if(diffDays &gt;= 1){
		return true;
	}
	else{
		return false;
	}
}
//8 date

//3
function isAdverseEventFormFilled(){
		var isFilled=true;
		<ifMode mode='EDIT' > 
			return true;
		</ifMode>
//
		var allAdverseEncountersIdsAndTerms = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('77b4254d-afab-4b3a-aff3-584e79b2c1e5'))  $fn.getObs($encounter, '166075').getValueAsString($!{locale}) #end"/>";		
		var allAdverseEncountersIdsAndTermsResults = allAdverseEncountersIdsAndTerms.replace(/\s\s+/g, '@');
        var allAdverseEncountersIdsAndTermsResultsArray = allAdverseEncountersIdsAndTermsResults.split('@');

		var allAdverseOutcomeEncountersIdsAndTerms = "<lookup complexExpression="#foreach($encounter in $fn.allEncounters('4e17094b-13f4-46c4-b6fa-bafe544be791'))  $fn.getObs($encounter, '166075').getValueAsString($!{locale}) #end"/>";		
		var allAdverseOutcomeEncountersIdsAndTermsResults = allAdverseOutcomeEncountersIdsAndTerms.replace(/\s\s+/g, '@');
        var allAdverseOutcomeEncountersIdsAndTermsResultsArray = allAdverseOutcomeEncountersIdsAndTermsResults.split('@');
		
		var adverseEventIdsAndTerms=[];
		var count=0;
		//if adverse outcome form is not filled then add all adverse event reported in list
		if(allAdverseOutcomeEncountersIdsAndTermsResultsArray.length==1){
			console.log(" adverse out not filled");
			for(k = 1; k &lt; allAdverseEncountersIdsAndTermsResultsArray.length; k++){
				adverseEventIdsAndTerms[count]=allAdverseEncountersIdsAndTermsResultsArray[k];
				count++;
				console.log(" adverse array "+k+" : "+allAdverseEncountersIdsAndTermsResultsArray[k]);
			}
		}
		//else if advese outcome form is filled then campare adverse event and adverse outcome terms and make list for AE that are not finished yet
		else{
			console.log(" adverse out filled");
			for(i = 1; i &lt; allAdverseEncountersIdsAndTermsResultsArray.length; i++){	
				var found = false;
				for(j = 1; j &lt; allAdverseOutcomeEncountersIdsAndTermsResultsArray.length; j++){
					if(allAdverseEncountersIdsAndTermsResultsArray[i].trim()==allAdverseOutcomeEncountersIdsAndTermsResultsArray[j].trim()){
						found = true;
						console.log("found at i "+i+" at j "+j+allAdverseEncountersIdsAndTermsResultsArray[i].trim()+"=="+allAdverseOutcomeEncountersIdsAndTermsResultsArray[j].trim());
					}	
				}
				if(!found){
					//if not found then it means that that particalur AE outcome is not finsihed yet. so add it to list of active AE.
					adverseEventIdsAndTerms[count]=allAdverseEncountersIdsAndTermsResultsArray[i];
					count++;
					console.log(" not found "+i+" : "+allAdverseEncountersIdsAndTermsResultsArray[i]);
				}
			}		
		}
		//if adverse event array is zero that means all adverse terms outcomes are finished or any adverse event is not reported yet
		if(adverseEventIdsAndTerms.length &lt;= 0 ){
			return false;//means no active AE is found
		}
		else{
			return true;//means active AE list found.
		}
//
}	
//3
 
jQuery(function() {
	 		getField('adverse_event_review_serious.value').change(function() {
				
				if(getValue('adverse_event_review_serious.value') == 1065 ){
					adverse_event_serious.show();
				}
				else{
					setValue('adverse_event_serious_criterion.value', "");  
					setValue('adverse_event_severity_review.value', "");  
					adverse_event_serious.hide();					
				}
								
			});	 
			
			jQuery("#adverse_event_id_term_list").change(function() {
			  setValue('adverse_event_id_term.value',jQuery("#adverse_event_id_term_list").val());  
			  //5 onset
			  var adverseEventIdAndTerm=jQuery("#adverse_event_id_term_list").val();
			  setValue('date_adverse_event_onset.value',getRelatedAdverseEventOnsetDate(adverseEventIdAndTerm));
			  //5 onset
			});
						
});
		
beforeSubmit.push(function() {

	setValue('adverse_event_serious_criterion.error','');
	setValue('adverse_event_severity_review.error','');
	setValue('adverse_event_id_term.error','');
	setValue('date_adverse_event_onset.error','');

	var valid=true;
	
	//4
	if(!isAdverseEventFormFilled()){		
		getField('date_adverse_event_onset.error').html('Please fill PMDT-Adverse Event Form first').show();						
		valid = false;
	}
	else{
		getField('date_adverse_event_onset.error').html('').hide(); 
	}

	if(isAdverseEventFormFilled() &amp;&amp;  ( getValue('adverse_event_id_term.value') == "Please Select Adverse Event ID and Term"
		|| getValue('adverse_event_id_term.value') == "")){
			getField('adverse_event_id_term.error').html('Please Select Correct Adverse Event ID and Term').show();	
			valid = false;
	}
	else if(!isAdverseEventFormFilled()){	
		getField('adverse_event_id_term.error').html('Please fill PMDT-Adverse Event Form first').show();
		valid = false;
	}
	else{
		getField('adverse_event_id_term.error').html('').hide(); 
	}
	//4
	
	//7 date
	setValue('date_adverse_event_review.error','');
	if(valid){
		if(getValue('date_adverse_event_review.value')==''){
			getField('date_adverse_event_review.error').html('Please select a Date').show();						
			valid = false;
		}
		else if(isFutureDate()){
			getField('date_adverse_event_review.error').html('Adverse Event Review date can not be in Future. Please Select Correct date').show();						
			valid = false;
		}
		else if(!checkOnsetDate()){
			getField('date_adverse_event_review.error').html('Adverse Event Review date can not be before or on same Adverse Event date. Please Select Correct date').show();						
			valid = false;
		}
		else{
			getField('date_adverse_event_review.error').html('').hide(); 
		}
	}	
	//7 date
	
	if(getValue('adverse_event_review_serious.value') == 1065 &amp;&amp; (getValue('adverse_event_serious_criterion.value') =='' ) ){	
		getField('adverse_event_serious_criterion.error').html('Please select a value.').show();
		valid=false;		
	}
	else{
		getField('adverse_event_serious_criterion.error').html('').hide();
	}
	
	if(getValue('adverse_event_review_serious.value') == 1065 &amp;&amp; (getValue('adverse_event_severity_review.value') =='' ) ){	
		getField('adverse_event_severity_review.error').html('Please select a value.').show();
		valid=false;		
	}
	else{
		getField('adverse_event_severity_review.error').html('').hide();
	}
	
	if( ! (getValue('adverse_event_review_serious.value') == 1065)){
		setValue('adverse_event_serious_criterion.value', "");  
		setValue('adverse_event_severity_review.value', "");  
	}
	
	if(valid==true){
		
		getField("adverse_event_id_term.value").prop("disabled", false);
		getField("date_adverse_event_onset.value").prop("disabled", false);
		
		var timeTakenDiv = $j("#time_taken_div");
		
		var endDate = new Date();
		var timeDiff = Math.abs(endDate.getTime() - startDate.getTime());
		var diffSec = timeDiff/1000;
		
		timeTakenDiv.show();
		setValue("time_taken.value",diffSec);
		timeTakenDiv.hide();
	
		return true;
}
	return false; 
});
		
		

		
</script>
</htmlform>