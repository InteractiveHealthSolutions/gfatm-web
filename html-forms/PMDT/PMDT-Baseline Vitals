<htmlform>
	<macros>
		paperFormId = (Fill this in)
		headerColor =#009d8e
		fontOnHeaderColor = white
	</macros>

	<style>
		.section {
			border: 1px solid $headerColor;
			padding: 2px;
			text-align: left;
			margin-bottom: 1em;
		}
		.sectionHeader {
			background-color: $headerColor;
			color: $fontOnHeaderColor;
			display: block;
			padding: 2px;
			font-weight: bold;
		}
		table.baseline-aligned td {
			vertical-align: baseline;
		}
	</style>

	<span style="float:right">Paper Form ID: $paperFormId</span>
	<h2>PMDT-Baseline Vitals (v0.0.1)</h2>

	<section headerLabel="1. Encounter Details">
		<table class="baseline-aligned">
			<tr>
				<td>Date:</td>
				<td><encounterDate default="today"/></td>
			</tr>
			<tr>
				<td>Location:</td>
				<td><encounterLocation default="2"  tags="PMDT" /></td>
			</tr>
			<tr>
				<td>Provider:</td>
				<td><encounterProvider default="currentUser" type="autocomplete"/></td>
			</tr>
		</table>
	</section>

	<section headerLabel="2. Baseline Vitals">
		<table class="baseline-aligned">
			<tr>
				<td>Date of baseline assessment:</td>
				<td><obs  id="date_baseline" conceptId="164648" defaultValue="today" required="true"   /></td>
			</tr>
			<tr>
				<td>Marital status:</td>
				<td><obs id="marital_status" conceptId="1054"  answerConceptIds="5555,1060,1057,1058,1059,1056,164144,164654,1067,164106"
                                                answerLabels="Married,Living together,Single,Divorced,Widowed,Separated,Engaged,Other,Unknown,Refused" defaultValue="5555"
                                                style="dropdown" required="true" ></obs>
                                </td>
			</tr>
			<tr>
				<td>Have you ever been a health care provider?</td>
				<td><obs  id="healthworker_past"  conceptId="164341" answerConceptIds="1090,159452,159450,1067"
                                                answerLabels="Never,In the past,Currently,Unknown" defaultValue="1067"
                                                style="dropdown" required="true" /> </td>
			</tr>
			<tr>
				<td>Do you drink alcohol?</td>
				<td><obs id="alcohol_use" conceptId="159449" answerConceptIds="1065,1066,1067,164106"
                                                answerLabels="Yes,No,Unknown,Refuse" defaultValue="1067" 
                                                style="dropdown" required="true" /> </td>	
                        </tr>
			<tr>
				<td>Do you smoke at least 1 cigarette per day?</td>
				<td><obs id="smoking" conceptId="164668" answerConceptIds="1065,1066,1067,164106"
                                                answerLabels="Yes,No,Unknown,Refuse" defaultValue="1067"
                                                required="true" style="dropdown"  > 
                                      <controls>
                                      <when value="1065" thenDisplay="#yes"/>
                                      </controls>
                                        </obs>
                                </td>
			</tr>
			<tr id="yes">
                                <td>If yes, then how many cigarettes per day?</td>
				<td><obs id="cigarette_per_day" conceptId="166030"   maxlength="3" size="3"/> </td>
			</tr>
		</table>
	</section>


	<section headerLabel="3. Physical Examination">
		<table class="baseline-aligned">
			<tr>
				<td>Weight (kg)</td>
				<td><obs  id="weight" conceptId="5089"  required="true"   /></td>
			</tr>
			<tr>
				<td>Height (cm)</td>
				<td><obs  id="height" conceptId="5090" required="true"   /></td>
			</tr>
			<tr>
				<td>BMI (kg/m²)</td>
				<td><obs id="bmi" conceptId="1342" required="true"   /></td>
			</tr>
			<tr>
				<td>Temperature (F)</td>
				<td><obs  id="temperature"  conceptId="166047"  required="true" /> </td>
			</tr>
			<tr>
				<td>Pulse</td>
				<td><obs id="pulse" conceptId="5087" /> </td>	
                        </tr>
			<tr>
				<td>Respiratory Rate</td>
				<td><obs id="resp_rate" conceptId="5242"  /> </td>
			</tr>
			<tr>
                                <td>Blood Pressure (Systolic)</td>
				<td><obs id="sbp" conceptId="5085"  defaultValue="0"  /> </td>                
			</tr>
                        <tr>
                                <td>Blood Pressure (Diastolic)</td>
				<td><obs id="dbp" conceptId="5086" defaultValue="0"/> </td>
			</tr> 
                        <tr>
                                <td>SpO₂ (%)</td>
				<td><obs id="blood_oxygen_saturation" conceptId="5092" /> </td>
			</tr>
                        <includeIf logicTest="GENDER = F">
                        <tr>
                                <td>Is the patient currently pregnant?</td>
				<td><obs id="currently_pregnant" conceptId="165105" answerConceptIds="1065,1066,1067,1175"
                                                answerLabels="Yes,No,Unknown,Not applicable" defaultValue="1066"
                                                style="dropdown"/> </td>
			</tr>
                       </includeIf>
                       <includeIf logicTest="GENDER = M">
                        <tr>
                                <td>Is the partner currently pregnant?</td>
				<td><obs id="partner_currently_pregnant" conceptId="165105" answerConceptIds="1065,1066,1067,1175"
                                                answerLabels="Yes,No,Unknown,Not applicable" defaultValue="1066"
                                                style="dropdown" /> </td>
			</tr>
                      </includeIf>

		</table>
	</section>

	<submit/>

<script type="text/javascript">

 
jQuery( document ).ready(function() {
		getField("bmi.value").prop("disabled", true);

		var address="<lookup expression="patient.personAddress.address1"/>"; //this will get the address1 field of the patient's preferred address
		var primaryContact	="<lookup expression="personAttributes.get('Primary Contact')"/>" //this will get the Primary Contact for patient	
		
		if(address=="" &amp;&amp; primaryContact==""){
			alert("Address And Primary Contact Not Found: Please fill Address and Primary Contact of this patient in Patient Dashboard.");
		}
		else if(address==""){
			alert("Address Not Found: Please fill Address of this patient in Patient Dashboard.");
		}
		else if(primaryContact==""){
			alert("Primary Contact Not Found: Please fill Primary Contact of this patient in Patient Dashboard.");
		}
		
		});
beforeSubmit.push(function() {
        
        setValue('marital_status.error','');
        setValue('healthworker_past.error','');
        setValue('alcohol_use.error','');
        setValue('smoking.error','');
        setValue('cigarette_per_day.error','');
        setValue('weight.error','');
        setValue('height.error','');
 	setValue('temperature.error','');
	setValue('pulse.error','');
	setValue('resp_rate.error','');
	setValue('sbp.error','');
	setValue('dbp.error','');
	setValue('blood_oxygen_saturation.error','');
	setValue('bmi.error', '');


	var valid=true;

	var healthWorker=getValue('healthworker_past.value');
	if(healthWorker.trim() == ""){
		getField('healthworker_past.error').html('This field can not be empty').show();
		valid=false;
	}

	var alcoholUse=getValue('alcohol_use.value');
	if(alcoholUse.trim() == ""){
		getField('alcohol_use.error').html('This field can not be empty').show();
		valid=false;
	}

	var smoking=getValue('smoking.value');
	if(smoking.trim() == ""){
		getField('smoking.error').html('This field can not be empty').show();
		valid=false;
	}else if(smoking==1065){
        
          var cigarettePerDay=getValue('cigarette_per_day.value');
	  if(cigarettePerDay.trim() == ""  || getValue('cigarette_per_day.value') == null ){
		getField('cigarette_per_day.error').html('This field can not be empty').show();
		valid=false;
	   }
         else if(!(cigarettePerDay.match(/^\d+$/))){
		getField('cigarette_per_day.error').html('Not an integer').show();
		valid=false;
        }
        else if( cigarettePerDay &lt; 1 || cigarettePerDay &gt; 100  ){
	         getField('cigarette_per_day.error').html('Value out of range. It should be between 1-100').show();
		 valid=false;	
		}
        }
	
         var weight=getValue('weight.value');
	  if(weight.trim() == ""  || getValue('weight.value') == null ){
		getField('weight.error').html('This field can not be empty').show();
		valid=false;
	   }
         else if(! jQuery.isNumeric(weight)){
		getField('weight.error').html('Not a Number').show();
		valid=false;
        }
         else if( weight &lt; 0.5   ){
	         getField('weight.error').html('Cannot be less than 0.5').show();
		 valid=false;	
		}
        else if( weight &gt; 700  ){
	         getField('weight.error').html('Cannot be greater than 700').show();
		 valid=false;	
		}

         var height=getValue('height.value');
	  if(height.trim() == ""  || getValue('height.value') == null ){
		getField('height.error').html('This field can not be empty').show();
		valid=false;
	   }
         else if(! jQuery.isNumeric(height)){
		getField('height.error').html('Not a Number').show();
		valid=false;
        }
         else if( height &lt; 10  ){
	         getField('height.error').html('Cannot be less than 10').show();
		 valid=false;	
		}
        else if( height &gt; 272  ){
	         getField('height.error').html('Cannot be greater than 272').show();
		 valid=false;	
		}

          var temperature=getValue('temperature.value');
	  if(temperature.trim() == ""  || getValue('temperature.value') == null ){
		getField('temperature.error').html('This field can not be empty').show();
		valid=false;
	   }
         else if(! jQuery.isNumeric(temperature)){
		getField('temperature.error').html('Not a Number').show();
		valid=false;
        }
        else if( temperature &lt; 57 ){
	         getField('temperature.error').html('Cannot be less than 57').show();
		 valid=false;	
		}
        else if( temperature &gt; 115 ){
	         getField('temperature.error').html('Cannot be greater than 115').show();
		 valid=false;	
		}

         var pulse=getValue('pulse.value');
         if(pulse == ""  || getValue('pulse.value') == null ){
		
	   }
else{
	 if(!(pulse.match(/^\d+$/))){
		getField('pulse.error').html('Not an integer').show();
		valid=false;
        }
        else if( pulse &lt; 0  ){
	         getField('pulse.error').html('Cannot be less than 0').show();
		 valid=false;	
		}
        else if( pulse &gt; 230 ){
	         getField('pulse.error').html('Cannot be greater than 230').show();
		 valid=false;	
		}
     }    

         var resp_rate=getValue('resp_rate.value');
         if(resp_rate == ""  || getValue('resp_rate.value') == null ){
		
	   }
else{
	 if(!(resp_rate.match(/^\d+$/))){
		getField('resp_rate.error').html('Not an integer').show();
		valid=false;
        }
        else if( resp_rate &lt; 0  ){
	         getField('resp_rate.error').html('Cannot be less than 0').show();
		 valid=false;	
		}
        else if( resp_rate &gt; 99 ){
	         getField('resp_rate.error').html('Cannot be greater than 99').show();
		 valid=false;	
		}
     }

         var sbp=getValue('sbp.value');
         if(sbp== ""  || getValue('sbp.value') == null ){
		
	   }
else{
	 if(!(sbp.match(/^\d+$/))){
		getField('sbp.error').html('Not an integer').show();
		valid=false;
        }
        else if( sbp &lt; 0  ){
	         getField('sbp.error').html('Cannot be less than 0').show();
		 valid=false;	
		}
        else if( sbp &gt; 250){
	         getField('sbp.error').html('Cannot be greater than 250').show();
		 valid=false;	
		}
     }

         var dbp=getValue('dbp.value');
         if(dbp== ""  || getValue('dbp.value') == null ){
		
	   }
else{
	 if(!(dbp.match(/^\d+$/))){
		getField('dbp.error').html('Not an integer').show();
		valid=false;
        }
        else if( dbp &lt; 0  ){
	         getField('dbp.error').html('Cannot be less than 0').show();
		 valid=false;	
		}
        else if( dbp &gt; 150){
	         getField('dbp.error').html('Cannot be greater than 150').show();
		 valid=false;	
		}
     }

         var blood_oxygen_saturation=getValue('blood_oxygen_saturation.value');
         if(blood_oxygen_saturation == ""  || getValue('blood_oxygen_saturation.value') == null ){
		
	   }
else{
	if(! jQuery.isNumeric(blood_oxygen_saturation)){
		getField('blood_oxygen_saturation.error').html('Not a Number').show();
		valid=false;
        }
        else if( blood_oxygen_saturation &lt; 0  ){
	         getField('blood_oxygen_saturation.error').html('Cannot be less than 0').show();
		 valid=false;	
		}
        else if( blood_oxygen_saturation &gt; 100){
	         getField('blood_oxygen_saturation.error').html('Cannot be greater than 100').show();
		 valid=false;	
		}
     }

        var maritalStatus=getValue('marital_status.value');
	if(maritalStatus.trim() == ""){
		getField('marital_status.error').html('This field can not be empty').show();
		valid=false;
	}
	

        if(valid==true){
                        var weight = getValue('weight.value');
			var height = getValue('height.value');
			var finalBmi = weight/(height/100*height/100);
			
			if(finalBmi &lt; 0 || finalBmi &gt; 200)
			{
			   getField('bmi.error').html('Invalid BMI. Something is wrong with Weight and Height values combination. Please change Height or Weight values.').show();
			   setValue('bmi.value', '');
                           valid=false;
			}
			else {
				getField('bmi.error').html('').hide();
				setValue('bmi.value', parseFloat(finalBmi).toFixed(1));
                                
			}
        }

	if(valid==true){
                getPatientAndSaveMaritalStatus(getValue('marital_status.value'));
                getField("bmi.value").prop("disabled", false);
                setValue('height.value',Number(height).toFixed(2));  
                setValue('weight.value',Number(weight).toFixed(2));  
                setValue('temperature.value',Number(temperature).toFixed(1));  
                if( !  (  (getValue('blood_oxygen_saturation.value')  &lt; 1) ||  (getValue('blood_oxygen_saturation.value') &gt; 100) ) )
                 { 
                   setValue('blood_oxygen_saturation.value',Number(blood_oxygen_saturation).toFixed(2)); 
                 } 

		var address="<lookup expression="patient.personAddress.address1"/>"; //this will get the address1 field of the patient's preferred address
		var primaryContact	="<lookup expression="personAttributes.get('Primary Contact')"/>" //this will get the Primary Contact for patient	
		
		if(address=="" &amp;&amp; primaryContact==""){
			alert("REMINDER: Please fill Address and Primary Contact for this patient.");
		}
		else if(address==""){
			alert("REMINDER: Please fill Address for this patient.");;
		}
		else if(primaryContact==""){
			alert("REMINDER: Please fill Primary Contact for this patient.");;
		}
		
		
	  return true;
	}
	else{
	  return false;
	}
  });

	function getPatientAndSaveMaritalStatus(maritalStatusValue){
			var patientId =  '<lookup expression="patient.getPatientIdentifier(3)"/>';
		
			jQuery.ajax({
					url: "/openmrs/ws/rest/v1/patient?q=" + patientId + "",
					dataType: 'json'
					}).done(function(data ) {
                                  
						saveMaritalStatus(data.results[0]['uuid'],maritalStatusValue);
				
				});
	}
	
	function saveMaritalStatus(patientUuid, maritalStatus) {
			console.log("patient marital: is " + maritalStatus);
			jQuery.ajax({
					url: "/openmrs/ws/rest/v1/person/" + patientUuid,
                    processData: false,
                    type: "POST",
					data: JSON.stringify({"attributes": [{"attributeType":"8d871f2a-c2cc-11de-8d13-0010c6dffd0f","value":maritalStatus}]}),
                    contentType: "application/json"
					
					}).done(function(data ) {
						console.log(data['display']);
						
				});
		}

	jQuery(function() {
	 getField('marital_status.value').change(function() {
	 if(getValue('marital_status.value').trim() != ""){
             getField('marital_status.error').html('').hide();
         }else{
		getField('marital_status.error').html('This field can not be empty').show();
         }
     });
  });

  	jQuery(function() {
	 getField('healthworker_past.value').change(function() {
	 if(getValue('healthworker_past.value').trim() != ""){
             getField('healthworker_past.error').html('').hide();
         }else{
		getField('healthworker_past.error').html('This field can not be empty').show();
         }
     });
  });

  	jQuery(function() {
	 getField('alcohol_use.value').change(function() {
	 if(getValue('alcohol_use.value').trim() != ""){
             getField('alcohol_use.error').html('').hide();
         }else{
		getField('alcohol_use.error').html('This field can not be empty').show();
         }
     });
  });

  	jQuery(function() {
	 getField('smoking.value').change(function() {
	 if(getValue('smoking.value').trim() != ""){
             getField('smoking.error').html('').hide();
         }else{
		getField('smoking.error').html('This field can not be empty').show();
         }
     });
  });

 	jQuery(function() {
	 getField('weight.value').change(function() {

		
		  var weight=getValue('weight.value');
                  var valid=true;
		       if(weight.trim() == ""  || getValue('weight.value') == null ){
			    valid=false;
		          }
			 else if(! jQuery.isNumeric(weight)){
			valid=false;
			}
			 else if( weight &lt; 0.5   ){
			 valid=false;	
			}
			else if( weight &gt; 700  ){
			 valid=false;	
			}

			 var height=getValue('height.value');
		  if(height.trim() == ""  || getValue('height.value') == null ){
			valid=false;
		   }
			 else if(! jQuery.isNumeric(height)){
			valid=false;
			}
			 else if( height &lt; 10  ){
			 valid=false;	
			}
			else if( height &gt; 272  ){
			 valid=false;	
			}
		
if(valid==true){
			var weight = getValue('weight.value');
			var height = getValue('height.value');
			var finalBmi = weight/(height/100*height/100);
			
			if(finalBmi &lt; 0 || finalBmi &gt; 200)
			{
			   getField('bmi.error').html('Invalid BMI. Something is wrong with Weight and Height values combination. Please change Height or Weight values.').show();
			   setValue('bmi.value', '');
			}
			else {
				getField('bmi.error').html('').hide();
				setValue('bmi.value', parseFloat(finalBmi).toFixed(1));
			}
			
		}
              else if(getValue('weight.value')!='' &amp;&amp; getValue('height.value')!=''){
                          getField('bmi.error').html('Invalid BMI. Something is wrong with Weight and Height values combination. Please change Height or Weight values.').show();
			   setValue('bmi.value', '');
}
		else {
			setValue('bmi.value', '');
			getField('bmi.error').html('').hide();
		}
     });
  });

  	jQuery(function() {
	 getField('height.value').change(function() {

		
			  var weight=getValue('weight.value');
                  var valid=true;
		       if(weight.trim() == ""  || getValue('weight.value') == null ){
			    valid=false;
		          }
			 else if(! jQuery.isNumeric(weight)){
			valid=false;
			}
			 else if( weight &lt; 0.5   ){
			 valid=false;	
			}
			else if( weight &gt; 700  ){
			 valid=false;	
			}

			 var height=getValue('height.value');
		  if(height.trim() == ""  || getValue('height.value') == null ){
			valid=false;
		   }
			 else if(! jQuery.isNumeric(height)){
			valid=false;
			}
			 else if( height &lt; 10  ){
			 valid=false;	
			}
			else if( height &gt; 272  ){
			 valid=false;	
			}
		
if(valid==true){

			var weight = getValue('weight.value');
			var height = getValue('height.value');
			var finalBmi = weight/(height/100*height/100);
			
			if(finalBmi &lt; 0 || finalBmi &gt; 200)
			{
			   getField('bmi.error').html('Invalid BMI. Something is wrong with Weight and Height values combination. Please change Height or Weight values.').show();
			   setValue('bmi.value', '');
			}
			else {
				getField('bmi.error').html('').hide();
				setValue('bmi.value', parseFloat(finalBmi).toFixed(1));
			}
		}
		 else if(getValue('weight.value')!='' &amp;&amp; getValue('height.value')!=''){
                          getField('bmi.error').html('Invalid BMI. Something is wrong with Weight and Height values combination. Please change Height or Weight values.').show();
			   setValue('bmi.value', '');
}
		else {
			setValue('bmi.value', '');
			getField('bmi.error').html('').hide();
		}

     });
  });

</script>

</htmlform>